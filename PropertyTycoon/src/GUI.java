/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sezuka
 */
import javax.swing.*;
import java.awt.*;

public class GUI extends JFrame {
    private JTextField CrapperStreetName;
    private JTextField GOTextField;
    private JPanel Window;
    private JPanel BoardMargin;
    private JPanel Board;
    private JPanel Centre;
    private JPanel GoMargin;
    private JPanel Go;
    private JPanel SideOne;
    private JPanel SideTwo;
    private JPanel SideThree;
    private JPanel SideFour;
    private JPanel CentreMargin;
    private JPanel GoToJailMargin;
    private JPanel FreeParkingMargin;
    private JPanel JailMargin;
    private JPanel GoToJail;
    private JPanel TuringHeights;
    private JPanel SuperTax;
    private JPanel HawkingWay;
    private JPanel OkThree;
    private JPanel LewesStation;
    private JPanel IbisClose;
    private JPanel PLThree;
    private JPanel GhengisCrescent;
    private JPanel SiratMews;
    private JPanel SideFourProperties;
    private JPanel SideThreeProperties;
    private JPanel SideTwoProperties;
    private JPanel CrapperStreet;
    private JPanel PLOne;
    private JPanel GangstersParadise;
    private JPanel IncomeTax;
    private JPanel BrightonStation;
    private JPanel WeepingAngel;
    private JPanel OKOne;
    private JPanel PottsAvenue;
    private JPanel NardoleDrive;
    private JPanel PLDeck;
    private JPanel OkDeck;
    private JPanel FreeParking;
    private JPanel SideOneProperties;
    private JPanel NardoleDriveOwner;
    private JPanel PottsAvenueOwner;
    private JPanel WeepingAngelOwner;
    private JPanel WeepignAngelColour;
    private JPanel WeepingAngelContainer;
    private JPanel CrapperStreetColour;
    private JPanel CrapperStreetOwner;
    private JPanel CrapperStreetContainer;
    private JPanel CrapperStreetInfo;
    private JPanel CrapperStreetPieces;
    private JPanel CrapperStreetHouseHotel;
    private JPanel CrapperStreetCat;
    private JPanel CrapperStreetBoot;
    private JPanel CrapperStreetPhone;
    private JPanel CrapperStreetHat;
    private JPanel CrapperStreetSpoon;
    private JPanel CrapperStreetGoblet;
    private JPanel EdisonWater;
    private JPanel YueFeiSquare;
    private JPanel OkTwo;
    private JPanel YueFeiColor;
    private JPanel YueFeiOwner;
    private JPanel YueFeiName;
    private JPanel YueFeiHouseHotel;
    private JPanel YueFeiPieces;
    private JPanel YueFeiInfo;
    private JPanel OkTwoColour;
    private JPanel OkTwoOwner;
    private JPanel OkTwoInfo;
    private JPanel OkTwoName;
    private JPanel OkTwoHouseHotel;
    private JPanel OkTwoPieces;
    private JPanel SiratMewsColour;
    private JPanel SiratMewsOwner;
    private JPanel SiratMewsInfo;
    private JPanel SiratMewsName;
    private JPanel SiratMewsHouseHotel;
    private JPanel SiratMewsPieces;
    private JPanel GhengisCrescentColour;
    private JPanel GhengisCrescentOwner;
    private JPanel GhengisCrescentInfo;
    private JPanel HawkingWayColour;
    private JPanel HawkingWayOwner;
    private JPanel HawkingWayInfo;
    private JPanel HawkingWayName;
    private JPanel HawkingWayHouseHotel;
    private JPanel HawkingWayPieces;
    private JPanel SuperTaxContainer;
    private JPanel TuringHeightsColour;
    private JPanel TuringHeightsOwner;
    private JPanel TuringHeightsInfo;
    private JPanel TuringHeightsName;
    private JPanel TuringHeightsHouseHotel;
    private JPanel TuringHeightsPieces;
    private JPanel OkThreeColour;
    private JPanel OkThreeOwner;
    private JPanel OkThreeInfo;
    private JPanel OkThreeName;
    private JPanel OkThreePieces;
    private JPanel OkThreeHotelHouse;
    private JPanel LewesStationColour;
    private JPanel LewesStationOwner;
    private JPanel LewesStationInfo;
    private JPanel LewesStationName;
    private JPanel LewesStationHouseHotel;
    private JPanel LewesStationPieces;
    private JPanel IbisCloseColour;
    private JPanel IbisCloseOwner;
    private JPanel IbisCloseInfo;
    private JPanel IbisCloseName;
    private JPanel IbisCloseHouseHotel;
    private JPanel IbisClosePieces;
    private JPanel PLThreeColour;
    private JPanel PLThreeOwner;
    private JPanel PLThreeInfo;
    private JPanel PLThreeName;
    private JPanel PLThreeHouseHotel;
    private JPanel PLThreePieces;
    private JPanel GhengisCrescentName;
    private JPanel GhengisCrescentHouseHotel;
    private JPanel GhengisCrescentPieces;
    private JPanel PennyLaneContainer;
    private JPanel PennyLaneCat;
    private JPanel PennyLaneColor;
    private JPanel PennyLane;
    private JPanel SkywalkerDrive;
    private JPanel TeslaPowerCo;
    private JPanel WookieHole;
    private JPanel ReyLane;
    private JPanel HoveStation;
    private JPanel CooperDrive;
    private JPanel WolowitzStreet;
    private JPanel PLTwo;
    private JPanel MulanRouge;
    private JPanel HanXinGardens;
    private JPanel FalmerStation;
    private JPanel KirkClose;
    private JPanel PicardAvenue;
    private JPanel CrusherCreek;
    private JPanel PLOneColor;
    private JPanel PLOneContainer;
    private JPanel PLOneInfo;
    private JPanel PLOneName;
    private JPanel PLOnePieces;
    private JPanel PLOneCat;
    private JPanel PLOneBoot;
    private JPanel PLOnePhone;
    private JPanel PLOneHat;
    private JPanel PLOneSpoon;
    private JPanel PLOneGoblet;
    private JPanel SkyWalkerColor;
    private JPanel SkyWalkerContainer;
    private JPanel SkyWalkerName;
    private JPanel SkyWalkerHouseHotel;
    private JPanel SkyWalkerPieces;
    private JPanel SkyWalkerOwner;
    private JPanel SkyWalkerCat;
    private JPanel SkyWalkerBoot;
    private JPanel SkyWalkerPhone;
    private JPanel SkyWalkerHat;
    private JPanel SkyWalkerSpoon;
    private JPanel SkyWalkerGoblet;
    private JPanel TeslaPowerCoColour;
    private JPanel TeslaPowerCoContainer;
    private JPanel TeslaPowerCoOwner;
    private JPanel TeslaPowerCoName;
    private JPanel TeslaPOwerCoHouseHotel;
    private JPanel TeslaPowerCoPieces;
    private JPanel TeslaPowerCoCat;
    private JPanel TeslaPowerCoBoot;
    private JPanel TeslaPowerCoPhone;
    private JPanel TeslaPowerCoHat;
    private JPanel TeslaPowerCoSpoon;
    private JPanel TeslaPowerCoGoblet;
    private JPanel WookieHoleColour;
    private JPanel WookieHoleContainer;
    private JPanel WookieHoleOwner;
    private JPanel WookieHoleName;
    private JPanel WookieHoleHouseHotel;
    private JPanel WookieHolePieces;
    private JPanel WookieHoleCat;
    private JPanel WookieHoleBoot;
    private JPanel WookieHolePhone;
    private JPanel WookieHoleHat;
    private JPanel WookieHoleSpoon;
    private JPanel WookieHoleGoblet;
    private JPanel ReyLaneColour;
    private JPanel ReyLaneContainer;
    private JPanel ReyLaneOwner;
    private JPanel ReyLaneName;
    private JPanel ReyLaneHouseHotel;
    private JPanel ReyLanePieces;
    private JPanel ReyLaneCat;
    private JPanel ReyLaneBoot;
    private JPanel ReyLanePhone;
    private JPanel ReyLaneHat;
    private JPanel ReyLaneSpoon;
    private JPanel ReyLaneGoblet;
    private JPanel HoveStationColor;
    private JPanel HoveStationContainer;
    private JPanel HoveStationOwner;
    private JPanel HoveStationName;
    private JPanel HoveStationHouseHotel;
    private JPanel HoveStationPieces;
    private JPanel HoveStationCat;
    private JPanel HoveStationBoot;
    private JPanel HoveStationPhone;
    private JPanel HoveStationHat;
    private JPanel HoveStationSpoon;
    private JPanel HoveStationGoblet;
    private JPanel CooperDriveColour;
    private JPanel CooperDriveContainer;
    private JPanel CooperDriveOwner;
    private JPanel CooperDriveName;
    private JPanel CooperDriveHouseHotel;
    private JPanel CooperDrivePieces;
    private JPanel CooperDriveCat;
    private JPanel CooperDriveBoot;
    private JPanel CoopoerDrivePhone;
    private JPanel CooperDriveHat;
    private JPanel CooperDriveSpoon;
    private JPanel CooperDriveGoblet;
    private JPanel PLTwoColour;
    private JPanel PLTwoContainer;
    private JPanel PLTwoOwner;
    private JPanel PLTwoName;
    private JPanel PLTwoHouseHotel;
    private JPanel PLTwoPieces;
    private JPanel PLTwoCat;
    private JPanel PLTwoBoot;
    private JPanel PLTwoPhone;
    private JPanel PLTwoHat;
    private JPanel PLTwoSpoon;
    private JPanel PLTwoGoblet;
    private JPanel WolowitzStreetColour;
    private JPanel WolowitzStreetContainer;
    private JPanel WolowitzStreetOwner;
    private JPanel WolowitzStreetName;
    private JPanel WolowitzStreetHouseHotel;
    private JPanel WolowitzStreetPieces;
    private JPanel WolowitzStreetCat;
    private JPanel WolowitzStreetBoot;
    private JPanel WolowitzStreetPhone;
    private JPanel WolowitzStreetHat;
    private JPanel WolowitzStreetSpoon;
    private JPanel WolowitzStreetGoblet;
    private JPanel PennyLaneOwner;
    private JPanel PennyLaneName;
    private JPanel PennyLaneHouseHotel;
    private JPanel PennyLanePieces;
    private JPanel PennyLaneBoot;
    private JPanel PennyLanePhone;
    private JPanel PennyLaneHat;
    private JPanel PennyLaneSpoon;
    private JPanel PennyLaneGoblet;
    private JPanel FreeParkingPieces;
    private JPanel FreeParkintCat;
    private JPanel FreeParkingBoot;
    private JPanel FreeParkingPhone;
    private JPanel FreeParkingHat;
    private JPanel FreeParkingSpoon;
    private JPanel FreeParkingGoblet;
    private JPanel YueFeiCat;
    private JPanel YueFeiBoot;
    private JPanel YeuFeiPhone;
    private JPanel YueFeiHat;
    private JPanel YueFeiSpoon;
    private JPanel YueFeiGoblet;
    private JPanel OkTwoCat;
    private JPanel OkTwoBoot;
    private JPanel OkTwoPhone;
    private JPanel OkTwoHat;
    private JPanel OkTwoSpoon;
    private JPanel OkTwoGoblet;
    private JPanel MulanRougeOwner;
    private JPanel MulanRougeContainer;
    private JPanel MulanRougeColour;
    private JPanel MulanRougeName;
    private JPanel MulanRougeHouseHotel;
    private JPanel MulanRougePieces;
    private JPanel MulanRougeCat;
    private JPanel MulanRougeBoot;
    private JPanel MulanRougePhone;
    private JPanel MulanRougeHat;
    private JPanel MulanRougeSpoon;
    private JPanel MulanRougeGoblet;
    private JPanel HanXinGardensColour;
    private JPanel HanXinGardensOwner;
    private JPanel HanXinGardensContainer;
    private JPanel HanXinGardensName;
    private JPanel HanXinGardensHouseHotel;
    private JPanel HanXinGardensPieces;
    private JPanel HanXinGardensCat;
    private JPanel HanXinGardensBoot;
    private JPanel HanXinGardensPhone;
    private JPanel HanXinGardensHat;
    private JPanel HanXinGardensSpoon;
    private JPanel HanXinGardensGoblet;
    private JPanel FalmerStationColour;
    private JPanel FalmerStationContainer;
    private JPanel FalmerStationOwner;
    private JPanel FalmerStationName;
    private JPanel FalmerStationHouseHotel;
    private JPanel FalmerStationPieces;
    private JPanel FalmerStationCat;
    private JPanel FalmerStationBoot;
    private JPanel FalmerStationPhone;
    private JPanel FalmerStaionHat;
    private JPanel FalmerStationSpoon;
    private JPanel FalmerStationGoblet;
    private JPanel KirkCloseColour;
    private JPanel KirkCloseContainer;
    private JPanel KirkCloseOwner;
    private JPanel KirkCloseName;
    private JPanel KirkCloseHouseHotel;
    private JPanel KirkClosePieces;
    private JPanel KirkCloseCat;
    private JPanel KirkCloseBoot;
    private JPanel KirkClosePhone;
    private JPanel KirkCloseHat;
    private JPanel KirkCloseSpoon;
    private JPanel KirkCloseGoblet;
    private JPanel PicardAvenueColour;
    private JPanel PicardAvenueOwner;
    private JPanel PicardAvenueContainer;
    private JPanel PicardAvenueName;
    private JPanel PicardAvenueHouseHotel;
    private JPanel PicardAvenuePieces;
    private JPanel PicardAvenueCat;
    private JPanel PicardAvenueBoot;
    private JPanel PicardAvenuePhone;
    private JPanel PicardAvenueHat;
    private JPanel PicardAvenueSpoon;
    private JPanel PicardAvenueGoblet;
    private JPanel EdisonWaterColour;
    private JPanel EdisonWaterOwner;
    private JPanel EdisonWaterContainer;
    private JPanel EdisonWaterName;
    private JPanel EdisonWaterHouseHotel;
    private JPanel EdisonWaterPieces;
    private JPanel EdisonWaterCat;
    private JPanel EdisonWaterBoot;
    private JPanel EdisonWaterPhone;
    private JPanel EdisonWaterHat;
    private JPanel EdisonWaterSpoon;
    private JPanel EdisonWaterGoblet;
    private JPanel CrusherCreekColour;
    private JPanel CrusherCreekContainer;
    private JPanel CrusherCreekOwner;
    private JPanel CrusherCreekName;
    private JPanel CrusherCreekHouseHotel;
    private JPanel CrusherCreekPieces;
    private JPanel CrusherCreekCat;
    private JPanel CrusherCreekBoot;
    private JPanel CrusherCreekPhone;
    private JPanel CrusherCreekHat;
    private JPanel CrusherCreekSpoom;
    private JPanel CrusherCreekGoblet;
    private JPanel GoToJailPieces;
    private JPanel GoToJailCat;
    private JPanel GoToJailBoot;
    private JPanel GoToJailPhone;
    private JPanel GoToJailHat;
    private JPanel GoToJailSpoon;
    private JPanel GoToJailGoblet;
    private JPanel SiratMewsCat;
    private JPanel SiratMewsBoot;
    private JPanel SiratMewsPhone;
    private JPanel SiratMewsHat;
    private JPanel SiratMewsSpoon;
    private JPanel SiratMewsGoblet;
    private JPanel GhengisCrescentCat;
    private JPanel GhengisCrescentBoot;
    private JPanel GhengisCrescentPhone;
    private JPanel GhengisCrescentHat;
    private JPanel GhengisCrescentSpoon;
    private JPanel GhengisCrescentGoblet;
    private JPanel TuringHeightsCat;
    private JPanel TuringHeightsBoot;
    private JPanel TuringHeightsPhone;
    private JPanel TuringHeightsHat;
    private JPanel TuringHeightsSpoon;
    private JPanel TuringHeightsGoblet;
    private JPanel SuperTaxColour;
    private JPanel SuperTaxOwner;
    private JPanel SuperTaxName;
    private JPanel SuperTaxPieces;
    private JPanel SuperTaxHouseHotel;
    private JPanel SuperTaxCat;
    private JPanel SuperTaxBoot;
    private JPanel SuperTaxPhone;
    private JPanel SuperTaxHat;
    private JPanel SuperTaxSpoon;
    private JPanel SuperTaxGoblet;
    private JPanel HawkingWayCat;
    private JPanel HawkingWayBoot;
    private JPanel HawkingWayPhone;
    private JPanel HawkingWayHat;
    private JPanel HawkingWaySpoon;
    private JPanel HawkingWayGoblet;
    private JPanel OkThreeCat;
    private JPanel OkThreeBoot;
    private JPanel OkThreePhone;
    private JPanel OkThreeHat;
    private JPanel OkThreeSpoon;
    private JPanel OkThreeGoblet;
    private JPanel LewesStationCat;
    private JPanel LewesStationBoot;
    private JPanel LewesStationPhone;
    private JPanel LewesStationHat;
    private JPanel LewesStationSpoon;
    private JPanel LewesStationGoblet;
    private JPanel IbisCloseCat;
    private JPanel IbisCloseBoot;
    private JPanel IbisClosePhone;
    private JPanel IbisCloseHat;
    private JPanel IbisCloseSpoon;
    private JPanel IbisCloseGoblet;
    private JPanel PLThreeCat;
    private JPanel PLThreeBoot;
    private JPanel PLThreePhone;
    private JPanel PLThreeHat;
    private JPanel PLThreeSpoon;
    private JPanel PLThreeGoblet;
    private JPanel Jail;
    private JPanel JailContainer;
    private JPanel JustVisitingPieces;
    private JPanel JustVisitingCat;
    private JPanel JustVisitingBoot;
    private JPanel JustVisitingPhone;
    private JPanel JustVisitingHat;
    private JPanel JustVisitingSpoon;
    private JPanel JustVisitingGoblet;
    private JPanel GoPieces;
    private JPanel GoCat;
    private JPanel GoBoot;
    private JPanel GoPhone;
    private JPanel GoHat;
    private JPanel GoSpoon;
    private JPanel GoGoblet;
    private JPanel PLOneOwner;
    private JPanel GangstersParadiseColour;
    private JPanel GangstersParadiseContainer;
    private JPanel GangstersParadiseName;
    private JPanel GangstersParadiseHouseHotel;
    private JPanel GangstersParadisePieces;
    private JPanel GangstersParadiseCat;
    private JPanel GangstersParadiseBoot;
    private JPanel gangstersParadisePhone;
    private JPanel GangstersParadiseHat;
    private JPanel GangstersParadiseSpoon;
    private JPanel GangastersParadiseGoblet;
    private JPanel IncomeTaxColour;
    private JPanel IncomeTaxOwner;
    private JPanel IncomeTaxContainer;
    private JPanel INcomeTaxName;
    private JPanel IncomeTaxHouseHotel;
    private JPanel IncomeTaxPieces;
    private JPanel IncomeTaxCat;
    private JPanel IncomeTaxBoot;
    private JPanel IncomeTaxPhone;
    private JPanel IncomeTaxHat;
    private JPanel IncomeTaxSpoon;
    private JPanel IncomeTaxGoblet;
    private JPanel BrightonStationColour;
    private JPanel BrightonStationContainer;
    private JPanel BrightonStationOwner;
    private JPanel BrightonStationName;
    private JPanel BrightonstationHouseHotel;
    private JPanel BrightonStationPieces;
    private JPanel BrightonStationCat;
    private JPanel BrightonStationBoot;
    private JPanel BrightonStationPhone;
    private JPanel BrightonStationHat;
    private JPanel BrightonStationSpoon;
    private JPanel BrightonStationGoblet;
    private JPanel OKOneColour;
    private JPanel OKOneContainer;
    private JPanel PottsAvenueColour;
    private JPanel NardoleDriveColour;
    private JPanel NardoleDriveContainer;
    private JPanel PottsAvenueContainer;
    private JPanel WeepingAngelName;
    private JPanel WeepingAngelHouseHotel;
    private JPanel WeepingAngelPieces;
    private JPanel WeepingAngelCat;
    private JPanel WeepingAngelPhone;
    private JPanel WeepingAngelBoot;
    private JPanel WeepingAngelHat;
    private JPanel WeepingAngelSpoon;
    private JPanel WeepingAngelGoblet;
    private JPanel OKOneOwner;
    private JPanel OKOneName;
    private JPanel OKOneHouseHotel;
    private JPanel OKOnePieces;
    private JPanel OKOneCat;
    private JPanel OKOneBoot;
    private JPanel OKOnePhone;
    private JPanel OKOneHat;
    private JPanel OKOneSpoon;
    private JPanel OKOneGoblet;
    private JPanel PottsAvenueName;
    private JPanel PottsAvenueHouseHotel;
    private JPanel PottsAvenuePieces;
    private JPanel PottsAvenueCat;
    private JPanel PottsAvenueBoot;
    private JPanel PottsAvenuePhone;
    private JPanel PottsAvenueHat;
    private JPanel PottsAvenueSpoon;
    private JPanel PottsAvenueGoblet;
    private JPanel NardoleDriveName;
    private JPanel NardoleDriveHouseHotel;
    private JPanel NardoleDrivePieces;
    private JPanel NardoleDriveCat;
    private JPanel NardoleDriveBoot;
    private JPanel NardoleDrivePhone;
    private JPanel NardoleDriveHat;
    private JPanel NardoleDriveSpoon;
    private JPanel NardoleDriveGoblet;
    private JPanel GangstersParadiseOwner;


    private GUI() {
        // Load assets HERE
//        this.Window = new JPanel();
//        this.GOTextField = new JTextField("GO");
//        this.BoardMargin = new JPanel();
//        this.Board = new JPanel();
//        this.Centre = new JPanel();
//        this.GoMargin = new JPanel();
//        this.Go = new JPanel();
//        this.SideOne = new JPanel();
//        this.SideTwo = new JPanel();
//        this.SideThree = new JPanel();
//        this.SideFour = new JPanel();
//        this.CentreMargin = new JPanel();
//        this.GoToJailMargin = new JPanel();
//        this.FreeParkingMargin = new JPanel();
//        this.JailMargin = new JPanel();
//        this.GoToJail = new JPanel();
//        this.TuringHeights = new JPanel();
//        this.SuperTax = new JPanel();
//        this.HawkingWay = new JPanel();
//        this.OkThree = new JPanel();
//        this.LewesStation = new JPanel();

        // Leave this (adds components to main panel automatically)
        //for (JComponent comp : allComponents) {
//        Window.add(GOTextField);
        //}
    }

    public JComponent getMainComponent() {
        return Window;
    }

    private static void createAndShowGui() {
        GUI gameFrame = new GUI();

        // creating my JFrame only when I need it and where I need it
        JFrame frame = new JFrame("Property Tycoon");
        frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );
        frame.getContentPane().add( gameFrame.getMainComponent() );
        frame.setSize(1000, 1000);
        frame.setLocationRelativeTo(null);
        //frame.pack();
        frame.setLocationByPlatform(true);
        frame.setVisible(true);
    }


    public static void main(String[] args) {
        // Don't touch (main run)
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGui();
            }
        });
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        Window = new JPanel();
        Window.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1, true, true));
        Window.setPreferredSize(new Dimension(1920, 1080));
        Window.setVerifyInputWhenFocusTarget(false);
        BoardMargin = new JPanel();
        BoardMargin.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1, true, true));
        Window.add(BoardMargin, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(800, 800), new Dimension(800, 800), new Dimension(800, 800), 0, false));
        Board = new JPanel();
        Board.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        BoardMargin.add(Board, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(800, 800), new Dimension(800, 800), new Dimension(800, 800), 0, false));
        GoMargin = new JPanel();
        GoMargin.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        Board.add(GoMargin, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 60), new Dimension(60, 60), new Dimension(60, 60), 0, false));
        Go = new JPanel();
        Go.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        Go.setBackground(new Color(-5328998));
        GoMargin.add(Go, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(60, 60), new Dimension(60, 60), new Dimension(60, 60), 0, false));
        Go.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        GOTextField = new JTextField();
        GOTextField.setBackground(new Color(-5328998));
        GOTextField.setEditable(false);
        Font GOTextFieldFont = this.$$$getFont$$$("Chalkduster", -1, 16, GOTextField.getFont());
        if (GOTextFieldFont != null) GOTextField.setFont(GOTextFieldFont);
        GOTextField.setHorizontalAlignment(0);
        GOTextField.setSelectedTextColor(new Color(-44182));
        GOTextField.setText("GO");
        Go.add(GOTextField, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 60), new Dimension(60, 60), new Dimension(60, 60), 0, false));
        GoPieces = new JPanel();
        GoPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        GoPieces.setBackground(new Color(-5328998));
        Go.add(GoPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        GoCat = new JPanel();
        GoCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoCat.setBackground(new Color(-5328998));
        GoCat.setEnabled(false);
        GoPieces.add(GoCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GoBoot = new JPanel();
        GoBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoBoot.setBackground(new Color(-5328998));
        GoBoot.setEnabled(false);
        GoPieces.add(GoBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GoPhone = new JPanel();
        GoPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoPhone.setBackground(new Color(-5328998));
        GoPhone.setEnabled(false);
        GoPieces.add(GoPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GoHat = new JPanel();
        GoHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoHat.setBackground(new Color(-5328998));
        GoHat.setEnabled(false);
        GoPieces.add(GoHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GoSpoon = new JPanel();
        GoSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoSpoon.setBackground(new Color(-5328998));
        GoSpoon.setEnabled(false);
        GoPieces.add(GoSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GoGoblet = new JPanel();
        GoGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoGoblet.setBackground(new Color(-5328998));
        GoGoblet.setEnabled(false);
        GoPieces.add(GoGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SideOne = new JPanel();
        SideOne.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        Board.add(SideOne, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(580, 80), new Dimension(580, 80), new Dimension(580, 80), 0, false));
        SideOneProperties = new JPanel();
        SideOneProperties.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 9, new Insets(0, 0, 0, 0), -1, -1));
        SideOne.add(SideOneProperties, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(580, 80), new Dimension(580, 80), new Dimension(580, 80), 0, false));
        CrapperStreet = new JPanel();
        CrapperStreet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideOneProperties.add(CrapperStreet, new com.intellij.uiDesigner.core.GridConstraints(0, 8, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        CrapperStreet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        CrapperStreetColour = new JPanel();
        CrapperStreetColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetColour.setBackground(new Color(-11652575));
        CrapperStreet.add(CrapperStreetColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 15), new Dimension(-1, 15), new Dimension(-1, 15), 0, false));
        CrapperStreetOwner = new JPanel();
        CrapperStreetOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetOwner.setBackground(new Color(-5328998));
        CrapperStreetColour.add(CrapperStreetOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        CrapperStreetOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        CrapperStreetColour.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        CrapperStreetContainer = new JPanel();
        CrapperStreetContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetContainer.setBackground(new Color(-5328998));
        CrapperStreet.add(CrapperStreetContainer, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        CrapperStreetInfo = new JPanel();
        CrapperStreetInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetInfo.setBackground(new Color(-5328998));
        CrapperStreetContainer.add(CrapperStreetInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        CrapperStreetHouseHotel = new JPanel();
        CrapperStreetHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetHouseHotel.setBackground(new Color(-5328998));
        CrapperStreetInfo.add(CrapperStreetHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        CrapperStreetName = new JTextField();
        CrapperStreetName.setBackground(new Color(-5328998));
        CrapperStreetName.setEditable(false);
        Font CrapperStreetNameFont = this.$$$getFont$$$("Chalkduster", -1, 5, CrapperStreetName.getFont());
        if (CrapperStreetNameFont != null) CrapperStreetName.setFont(CrapperStreetNameFont);
        CrapperStreetName.setForeground(new Color(-13290187));
        CrapperStreetName.setHorizontalAlignment(0);
        CrapperStreetName.setText("Crapper Str.");
        CrapperStreetInfo.add(CrapperStreetName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, -1), new Dimension(60, -1), new Dimension(60, -1), 0, false));
        CrapperStreetPieces = new JPanel();
        CrapperStreetPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetPieces.setBackground(new Color(-5328998));
        CrapperStreetContainer.add(CrapperStreetPieces, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        CrapperStreetCat = new JPanel();
        CrapperStreetCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetCat.setBackground(new Color(-5328998));
        CrapperStreetPieces.add(CrapperStreetCat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrapperStreetCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CrapperStreetBoot = new JPanel();
        CrapperStreetBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetBoot.setBackground(new Color(-5328998));
        CrapperStreetPieces.add(CrapperStreetBoot, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrapperStreetBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CrapperStreetPhone = new JPanel();
        CrapperStreetPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetPhone.setBackground(new Color(-5328998));
        CrapperStreetPieces.add(CrapperStreetPhone, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrapperStreetPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CrapperStreetHat = new JPanel();
        CrapperStreetHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetHat.setBackground(new Color(-5328998));
        CrapperStreetPieces.add(CrapperStreetHat, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrapperStreetHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CrapperStreetSpoon = new JPanel();
        CrapperStreetSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetSpoon.setBackground(new Color(-5328998));
        CrapperStreetPieces.add(CrapperStreetSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrapperStreetSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CrapperStreetGoblet = new JPanel();
        CrapperStreetGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrapperStreetGoblet.setBackground(new Color(-5328998));
        CrapperStreetPieces.add(CrapperStreetGoblet, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrapperStreetGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLOne = new JPanel();
        PLOne.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideOneProperties.add(PLOne, new com.intellij.uiDesigner.core.GridConstraints(0, 7, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        PLOne.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        PLOneColor = new JPanel();
        PLOneColor.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        PLOneColor.setBackground(new Color(-5328998));
        PLOne.add(PLOneColor, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 15), new Dimension(-1, 15), new Dimension(-1, 15), 0, false));
        PLOneOwner = new JPanel();
        PLOneOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLOneOwner.setBackground(new Color(-5328998));
        PLOneColor.add(PLOneOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        PLOneColor.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        PLOneContainer = new JPanel();
        PLOneContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLOneContainer.setBackground(new Color(-5328998));
        PLOne.add(PLOneContainer, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLOneInfo = new JPanel();
        PLOneInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(10, 0, 0, 0), -1, -1));
        PLOneInfo.setBackground(new Color(-5328998));
        PLOneContainer.add(PLOneInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLOneName = new JPanel();
        PLOneName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLOneInfo.add(PLOneName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        PLOneInfo.add(spacer3, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        PLOnePieces = new JPanel();
        PLOnePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        PLOnePieces.setBackground(new Color(-5328998));
        PLOneContainer.add(PLOnePieces, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PLOneCat = new JPanel();
        PLOneCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLOneCat.setBackground(new Color(-5328998));
        PLOnePieces.add(PLOneCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLOneCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLOneBoot = new JPanel();
        PLOneBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLOneBoot.setBackground(new Color(-5328998));
        PLOnePieces.add(PLOneBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLOneBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLOnePhone = new JPanel();
        PLOnePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLOnePhone.setBackground(new Color(-5328998));
        PLOnePieces.add(PLOnePhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLOnePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLOneHat = new JPanel();
        PLOneHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLOneHat.setBackground(new Color(-5328998));
        PLOnePieces.add(PLOneHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLOneHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLOneSpoon = new JPanel();
        PLOneSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLOneSpoon.setBackground(new Color(-5328998));
        PLOnePieces.add(PLOneSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLOneSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLOneGoblet = new JPanel();
        PLOneGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLOneGoblet.setBackground(new Color(-5328998));
        PLOnePieces.add(PLOneGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLOneGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GangstersParadise = new JPanel();
        GangstersParadise.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideOneProperties.add(GangstersParadise, new com.intellij.uiDesigner.core.GridConstraints(0, 6, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        GangstersParadise.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        GangstersParadiseColour = new JPanel();
        GangstersParadiseColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        GangstersParadiseColour.setBackground(new Color(-11652575));
        GangstersParadise.add(GangstersParadiseColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 15), new Dimension(-1, 15), new Dimension(-1, 15), 0, false));
        GangstersParadiseOwner = new JPanel();
        GangstersParadiseOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GangstersParadiseOwner.setBackground(new Color(-5328998));
        GangstersParadiseColour.add(GangstersParadiseOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GangstersParadiseOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer4 = new com.intellij.uiDesigner.core.Spacer();
        GangstersParadiseColour.add(spacer4, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        GangstersParadiseContainer = new JPanel();
        GangstersParadiseContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        GangstersParadiseContainer.setBackground(new Color(-5328998));
        GangstersParadise.add(GangstersParadiseContainer, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GangstersParadiseName = new JPanel();
        GangstersParadiseName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GangstersParadiseName.setBackground(new Color(-5328998));
        GangstersParadiseContainer.add(GangstersParadiseName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GangstersParadisePieces = new JPanel();
        GangstersParadisePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        GangstersParadisePieces.setBackground(new Color(-5328998));
        GangstersParadiseContainer.add(GangstersParadisePieces, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GangstersParadiseCat = new JPanel();
        GangstersParadiseCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GangstersParadiseCat.setBackground(new Color(-5328998));
        GangstersParadisePieces.add(GangstersParadiseCat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GangstersParadiseCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GangstersParadiseBoot = new JPanel();
        GangstersParadiseBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GangstersParadiseBoot.setBackground(new Color(-5328998));
        GangstersParadisePieces.add(GangstersParadiseBoot, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GangstersParadiseBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        gangstersParadisePhone = new JPanel();
        gangstersParadisePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gangstersParadisePhone.setBackground(new Color(-5328998));
        GangstersParadisePieces.add(gangstersParadisePhone, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        gangstersParadisePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GangstersParadiseHat = new JPanel();
        GangstersParadiseHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GangstersParadiseHat.setBackground(new Color(-5328998));
        GangstersParadisePieces.add(GangstersParadiseHat, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GangstersParadiseHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GangstersParadiseSpoon = new JPanel();
        GangstersParadiseSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GangstersParadiseSpoon.setBackground(new Color(-5328998));
        GangstersParadisePieces.add(GangstersParadiseSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GangstersParadiseSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GangastersParadiseGoblet = new JPanel();
        GangastersParadiseGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GangastersParadiseGoblet.setBackground(new Color(-5328998));
        GangstersParadisePieces.add(GangastersParadiseGoblet, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GangastersParadiseGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GangstersParadiseHouseHotel = new JPanel();
        GangstersParadiseHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(10, 0, 0, 0), -1, -1));
        GangstersParadiseHouseHotel.setBackground(new Color(-5328998));
        GangstersParadiseContainer.add(GangstersParadiseHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IncomeTax = new JPanel();
        IncomeTax.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideOneProperties.add(IncomeTax, new com.intellij.uiDesigner.core.GridConstraints(0, 5, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        IncomeTax.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        IncomeTaxColour = new JPanel();
        IncomeTaxColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        IncomeTaxColour.setBackground(new Color(-11652575));
        IncomeTax.add(IncomeTaxColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 15), new Dimension(-1, 15), new Dimension(-1, 15), 0, false));
        IncomeTaxOwner = new JPanel();
        IncomeTaxOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IncomeTaxOwner.setBackground(new Color(-5328998));
        IncomeTaxColour.add(IncomeTaxOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IncomeTaxOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer5 = new com.intellij.uiDesigner.core.Spacer();
        IncomeTaxColour.add(spacer5, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        IncomeTaxContainer = new JPanel();
        IncomeTaxContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        IncomeTaxContainer.setBackground(new Color(-5328998));
        IncomeTax.add(IncomeTaxContainer, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        INcomeTaxName = new JPanel();
        INcomeTaxName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        INcomeTaxName.setBackground(new Color(-5328998));
        IncomeTaxContainer.add(INcomeTaxName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IncomeTaxHouseHotel = new JPanel();
        IncomeTaxHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(10, 0, 0, 0), -1, -1));
        IncomeTaxHouseHotel.setBackground(new Color(-5328998));
        IncomeTaxContainer.add(IncomeTaxHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IncomeTaxPieces = new JPanel();
        IncomeTaxPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        IncomeTaxPieces.setBackground(new Color(-5328998));
        IncomeTaxContainer.add(IncomeTaxPieces, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        IncomeTaxCat = new JPanel();
        IncomeTaxCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IncomeTaxCat.setBackground(new Color(-5328998));
        IncomeTaxPieces.add(IncomeTaxCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        IncomeTaxCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        IncomeTaxBoot = new JPanel();
        IncomeTaxBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IncomeTaxBoot.setBackground(new Color(-5328998));
        IncomeTaxPieces.add(IncomeTaxBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        IncomeTaxBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        IncomeTaxPhone = new JPanel();
        IncomeTaxPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IncomeTaxPhone.setBackground(new Color(-5328998));
        IncomeTaxPieces.add(IncomeTaxPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        IncomeTaxPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        IncomeTaxHat = new JPanel();
        IncomeTaxHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IncomeTaxHat.setBackground(new Color(-5328998));
        IncomeTaxPieces.add(IncomeTaxHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        IncomeTaxHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        IncomeTaxSpoon = new JPanel();
        IncomeTaxSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IncomeTaxSpoon.setBackground(new Color(-5328998));
        IncomeTaxPieces.add(IncomeTaxSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        IncomeTaxSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        IncomeTaxGoblet = new JPanel();
        IncomeTaxGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IncomeTaxGoblet.setBackground(new Color(-5328998));
        IncomeTaxPieces.add(IncomeTaxGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        IncomeTaxGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        BrightonStation = new JPanel();
        BrightonStation.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideOneProperties.add(BrightonStation, new com.intellij.uiDesigner.core.GridConstraints(0, 4, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        BrightonStation.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        BrightonStationColour = new JPanel();
        BrightonStationColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        BrightonStationColour.setBackground(new Color(-11652575));
        BrightonStation.add(BrightonStationColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(60, 15), new Dimension(60, 15), new Dimension(60, 15), 0, false));
        BrightonStationOwner = new JPanel();
        BrightonStationOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        BrightonStationOwner.setBackground(new Color(-5328998));
        BrightonStationColour.add(BrightonStationOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        BrightonStationOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer6 = new com.intellij.uiDesigner.core.Spacer();
        BrightonStationColour.add(spacer6, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        BrightonStationContainer = new JPanel();
        BrightonStationContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        BrightonStationContainer.setBackground(new Color(-5328998));
        BrightonStation.add(BrightonStationContainer, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        BrightonStationName = new JPanel();
        BrightonStationName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        BrightonStationName.setBackground(new Color(-5328998));
        BrightonStationContainer.add(BrightonStationName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        BrightonstationHouseHotel = new JPanel();
        BrightonstationHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(10, 0, 0, 0), -1, -1));
        BrightonstationHouseHotel.setBackground(new Color(-5328998));
        BrightonStationContainer.add(BrightonstationHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        BrightonStationPieces = new JPanel();
        BrightonStationPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        BrightonStationPieces.setBackground(new Color(-5328998));
        BrightonStationContainer.add(BrightonStationPieces, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        BrightonStationCat = new JPanel();
        BrightonStationCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        BrightonStationCat.setBackground(new Color(-5328998));
        BrightonStationPieces.add(BrightonStationCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        BrightonStationCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        BrightonStationBoot = new JPanel();
        BrightonStationBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        BrightonStationBoot.setBackground(new Color(-5328998));
        BrightonStationPieces.add(BrightonStationBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        BrightonStationBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        BrightonStationPhone = new JPanel();
        BrightonStationPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        BrightonStationPhone.setBackground(new Color(-5328998));
        BrightonStationPieces.add(BrightonStationPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        BrightonStationPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        BrightonStationHat = new JPanel();
        BrightonStationHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        BrightonStationHat.setBackground(new Color(-5328998));
        BrightonStationPieces.add(BrightonStationHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        BrightonStationHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        BrightonStationSpoon = new JPanel();
        BrightonStationSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        BrightonStationSpoon.setBackground(new Color(-5328998));
        BrightonStationPieces.add(BrightonStationSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        BrightonStationSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        BrightonStationGoblet = new JPanel();
        BrightonStationGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        BrightonStationGoblet.setBackground(new Color(-5328998));
        BrightonStationPieces.add(BrightonStationGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        BrightonStationGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WeepingAngel = new JPanel();
        WeepingAngel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideOneProperties.add(WeepingAngel, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        WeepingAngel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        WeepignAngelColour = new JPanel();
        WeepignAngelColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        WeepignAngelColour.setBackground(new Color(-11652575));
        WeepingAngel.add(WeepignAngelColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(60, 20), new Dimension(60, 20), new Dimension(60, 20), 0, false));
        WeepingAngelOwner = new JPanel();
        WeepingAngelOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WeepingAngelOwner.setBackground(new Color(-5328998));
        WeepignAngelColour.add(WeepingAngelOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WeepingAngelOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer7 = new com.intellij.uiDesigner.core.Spacer();
        WeepignAngelColour.add(spacer7, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        WeepingAngelContainer = new JPanel();
        WeepingAngelContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        WeepingAngelContainer.setBackground(new Color(-5328998));
        WeepingAngel.add(WeepingAngelContainer, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        WeepingAngelName = new JPanel();
        WeepingAngelName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WeepingAngelName.setBackground(new Color(-5328998));
        WeepingAngelContainer.add(WeepingAngelName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WeepingAngelPieces = new JPanel();
        WeepingAngelPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        WeepingAngelPieces.setBackground(new Color(-5328998));
        WeepingAngelContainer.add(WeepingAngelPieces, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WeepingAngelCat = new JPanel();
        WeepingAngelCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WeepingAngelCat.setBackground(new Color(-5328998));
        WeepingAngelPieces.add(WeepingAngelCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WeepingAngelCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WeepingAngelBoot = new JPanel();
        WeepingAngelBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WeepingAngelBoot.setBackground(new Color(-5328998));
        WeepingAngelPieces.add(WeepingAngelBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WeepingAngelBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WeepingAngelPhone = new JPanel();
        WeepingAngelPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WeepingAngelPhone.setBackground(new Color(-5328998));
        WeepingAngelPieces.add(WeepingAngelPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WeepingAngelPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WeepingAngelHat = new JPanel();
        WeepingAngelHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WeepingAngelHat.setBackground(new Color(-5328998));
        WeepingAngelPieces.add(WeepingAngelHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WeepingAngelHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WeepingAngelSpoon = new JPanel();
        WeepingAngelSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WeepingAngelSpoon.setBackground(new Color(-5328998));
        WeepingAngelPieces.add(WeepingAngelSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WeepingAngelSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WeepingAngelGoblet = new JPanel();
        WeepingAngelGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WeepingAngelGoblet.setBackground(new Color(-5328998));
        WeepingAngelPieces.add(WeepingAngelGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WeepingAngelGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WeepingAngelHouseHotel = new JPanel();
        WeepingAngelHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WeepingAngelContainer.add(WeepingAngelHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OKOne = new JPanel();
        OKOne.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideOneProperties.add(OKOne, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        OKOne.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        OKOneColour = new JPanel();
        OKOneColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        OKOneColour.setBackground(new Color(-5328998));
        OKOne.add(OKOneColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 15), new Dimension(-1, 15), new Dimension(-1, 15), 0, false));
        OKOneOwner = new JPanel();
        OKOneOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OKOneOwner.setBackground(new Color(-5328998));
        OKOneColour.add(OKOneOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer8 = new com.intellij.uiDesigner.core.Spacer();
        OKOneColour.add(spacer8, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        OKOneContainer = new JPanel();
        OKOneContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        OKOneContainer.setBackground(new Color(-5328998));
        OKOne.add(OKOneContainer, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OKOneName = new JPanel();
        OKOneName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OKOneName.setBackground(new Color(-5328998));
        OKOneContainer.add(OKOneName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OKOneHouseHotel = new JPanel();
        OKOneHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(10, 0, 0, 0), -1, -1));
        OKOneHouseHotel.setBackground(new Color(-5328998));
        OKOneContainer.add(OKOneHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OKOnePieces = new JPanel();
        OKOnePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        OKOnePieces.setBackground(new Color(-5328998));
        OKOneContainer.add(OKOnePieces, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OKOneCat = new JPanel();
        OKOneCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OKOneCat.setBackground(new Color(-5328998));
        OKOnePieces.add(OKOneCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OKOneCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OKOneBoot = new JPanel();
        OKOneBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OKOneBoot.setBackground(new Color(-5328998));
        OKOnePieces.add(OKOneBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OKOneBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OKOnePhone = new JPanel();
        OKOnePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OKOnePhone.setBackground(new Color(-5328998));
        OKOnePieces.add(OKOnePhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OKOnePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OKOneHat = new JPanel();
        OKOneHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OKOneHat.setBackground(new Color(-5328998));
        OKOnePieces.add(OKOneHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OKOneHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OKOneSpoon = new JPanel();
        OKOneSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OKOneSpoon.setBackground(new Color(-5328998));
        OKOnePieces.add(OKOneSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OKOneSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OKOneGoblet = new JPanel();
        OKOneGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OKOneGoblet.setBackground(new Color(-5328998));
        OKOnePieces.add(OKOneGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OKOneGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PottsAvenue = new JPanel();
        PottsAvenue.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideOneProperties.add(PottsAvenue, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        PottsAvenue.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        PottsAvenueColour = new JPanel();
        PottsAvenueColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        PottsAvenueColour.setBackground(new Color(-11652575));
        PottsAvenue.add(PottsAvenueColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 15), new Dimension(-1, 15), new Dimension(-1, 15), 0, false));
        PottsAvenueOwner = new JPanel();
        PottsAvenueOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PottsAvenueOwner.setBackground(new Color(-5328998));
        PottsAvenueColour.add(PottsAvenueOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PottsAvenueOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer9 = new com.intellij.uiDesigner.core.Spacer();
        PottsAvenueColour.add(spacer9, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        PottsAvenueContainer = new JPanel();
        PottsAvenueContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        PottsAvenueContainer.setBackground(new Color(-5328998));
        PottsAvenue.add(PottsAvenueContainer, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PottsAvenueName = new JPanel();
        PottsAvenueName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PottsAvenueName.setBackground(new Color(-5328998));
        PottsAvenueContainer.add(PottsAvenueName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PottsAvenueHouseHotel = new JPanel();
        PottsAvenueHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(10, 0, 0, 0), -1, -1));
        PottsAvenueHouseHotel.setBackground(new Color(-5328998));
        PottsAvenueContainer.add(PottsAvenueHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PottsAvenuePieces = new JPanel();
        PottsAvenuePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        PottsAvenuePieces.setBackground(new Color(-5328998));
        PottsAvenueContainer.add(PottsAvenuePieces, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PottsAvenueCat = new JPanel();
        PottsAvenueCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PottsAvenueCat.setBackground(new Color(-5328998));
        PottsAvenuePieces.add(PottsAvenueCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PottsAvenueCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PottsAvenueBoot = new JPanel();
        PottsAvenueBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PottsAvenueBoot.setBackground(new Color(-5328998));
        PottsAvenuePieces.add(PottsAvenueBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PottsAvenueBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PottsAvenuePhone = new JPanel();
        PottsAvenuePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PottsAvenuePhone.setBackground(new Color(-5328998));
        PottsAvenuePieces.add(PottsAvenuePhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PottsAvenuePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PottsAvenueHat = new JPanel();
        PottsAvenueHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PottsAvenueHat.setBackground(new Color(-5328998));
        PottsAvenuePieces.add(PottsAvenueHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PottsAvenueHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PottsAvenueSpoon = new JPanel();
        PottsAvenueSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PottsAvenueSpoon.setBackground(new Color(-5328998));
        PottsAvenuePieces.add(PottsAvenueSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PottsAvenueSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PottsAvenueGoblet = new JPanel();
        PottsAvenueGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PottsAvenueGoblet.setBackground(new Color(-5328998));
        PottsAvenuePieces.add(PottsAvenueGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PottsAvenueGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        NardoleDrive = new JPanel();
        NardoleDrive.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideOneProperties.add(NardoleDrive, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        NardoleDrive.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        NardoleDriveColour = new JPanel();
        NardoleDriveColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        NardoleDriveColour.setBackground(new Color(-11652575));
        NardoleDrive.add(NardoleDriveColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 15), new Dimension(-1, 15), new Dimension(-1, 15), 0, false));
        NardoleDriveOwner = new JPanel();
        NardoleDriveOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        NardoleDriveOwner.setBackground(new Color(-5328998));
        NardoleDriveColour.add(NardoleDriveOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        NardoleDriveOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer10 = new com.intellij.uiDesigner.core.Spacer();
        NardoleDriveColour.add(spacer10, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        NardoleDriveContainer = new JPanel();
        NardoleDriveContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        NardoleDriveContainer.setBackground(new Color(-5328998));
        NardoleDrive.add(NardoleDriveContainer, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        NardoleDriveName = new JPanel();
        NardoleDriveName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        NardoleDriveName.setBackground(new Color(-5328998));
        NardoleDriveContainer.add(NardoleDriveName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        NardoleDriveHouseHotel = new JPanel();
        NardoleDriveHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(10, 0, 0, 0), -1, -1));
        NardoleDriveHouseHotel.setBackground(new Color(-5328998));
        NardoleDriveContainer.add(NardoleDriveHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        NardoleDrivePieces = new JPanel();
        NardoleDrivePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        NardoleDrivePieces.setBackground(new Color(-5328998));
        NardoleDriveContainer.add(NardoleDrivePieces, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        NardoleDriveCat = new JPanel();
        NardoleDriveCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        NardoleDriveCat.setBackground(new Color(-5328998));
        NardoleDrivePieces.add(NardoleDriveCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        NardoleDriveCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        NardoleDriveBoot = new JPanel();
        NardoleDriveBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        NardoleDriveBoot.setBackground(new Color(-5328998));
        NardoleDrivePieces.add(NardoleDriveBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        NardoleDriveBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        NardoleDrivePhone = new JPanel();
        NardoleDrivePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        NardoleDrivePhone.setBackground(new Color(-5328998));
        NardoleDrivePieces.add(NardoleDrivePhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        NardoleDrivePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        NardoleDriveHat = new JPanel();
        NardoleDriveHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        NardoleDriveHat.setBackground(new Color(-5328998));
        NardoleDrivePieces.add(NardoleDriveHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        NardoleDriveHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        NardoleDriveSpoon = new JPanel();
        NardoleDriveSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        NardoleDriveSpoon.setBackground(new Color(-5328998));
        NardoleDrivePieces.add(NardoleDriveSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        NardoleDriveSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        NardoleDriveGoblet = new JPanel();
        NardoleDriveGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        NardoleDriveGoblet.setBackground(new Color(-5328998));
        NardoleDrivePieces.add(NardoleDriveGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        NardoleDriveGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        JailMargin = new JPanel();
        JailMargin.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        Board.add(JailMargin, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(-1, 100), new Dimension(89, 60), new Dimension(60, 60), 0, false));
        Jail = new JPanel();
        Jail.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        Jail.setBackground(new Color(-5328998));
        Jail.setEnabled(false);
        JailMargin.add(Jail, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 60), new Dimension(60, 60), new Dimension(60, 60), 0, true));
        Jail.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        JailContainer = new JPanel();
        JailContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1, true, true));
        JailContainer.setBackground(new Color(-5328998));
        JailContainer.setOpaque(false);
        Jail.add(JailContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 60), new Dimension(60, 60), new Dimension(60, 60), 0, false));
        JailContainer.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final JTextField textField1 = new JTextField();
        textField1.setAlignmentX(0.9f);
        textField1.setAlignmentY(0.9f);
        textField1.setAutoscrolls(false);
        textField1.setBackground(new Color(-5328998));
        textField1.setEditable(false);
        Font textField1Font = this.$$$getFont$$$("Chalkduster", -1, 20, textField1.getFont());
        if (textField1Font != null) textField1.setFont(textField1Font);
        textField1.setHorizontalAlignment(0);
        textField1.setSelectedTextColor(new Color(-44182));
        textField1.setText("JAIL");
        JailContainer.add(textField1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(-1, 70), new Dimension(-1, 70), new Dimension(-1, 70), 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer11 = new com.intellij.uiDesigner.core.Spacer();
        Jail.add(spacer11, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        JustVisitingPieces = new JPanel();
        JustVisitingPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 6, new Insets(0, 0, 0, 0), -1, -1));
        JustVisitingPieces.setBackground(new Color(-5328998));
        Font JustVisitingPiecesFont = this.$$$getFont$$$("Chalkduster", -1, 14, JustVisitingPieces.getFont());
        if (JustVisitingPiecesFont != null) JustVisitingPieces.setFont(JustVisitingPiecesFont);
        Jail.add(JustVisitingPieces, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        JustVisitingPieces.setBorder(BorderFactory.createTitledBorder("Just Visiting"));
        JustVisitingCat = new JPanel();
        JustVisitingCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        JustVisitingCat.setBackground(new Color(-5328998));
        JustVisitingPieces.add(JustVisitingCat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 20), new Dimension(-1, 20), new Dimension(-1, 20), 0, false));
        JustVisitingCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        JustVisitingBoot = new JPanel();
        JustVisitingBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        JustVisitingBoot.setBackground(new Color(-5328998));
        JustVisitingPieces.add(JustVisitingBoot, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 20), new Dimension(-1, 20), new Dimension(-1, 20), 0, false));
        JustVisitingBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        JustVisitingPhone = new JPanel();
        JustVisitingPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        JustVisitingPhone.setBackground(new Color(-5328998));
        JustVisitingPieces.add(JustVisitingPhone, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 20), new Dimension(-1, 20), new Dimension(-1, 20), 0, false));
        JustVisitingPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        JustVisitingHat = new JPanel();
        JustVisitingHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        JustVisitingHat.setBackground(new Color(-5328998));
        JustVisitingPieces.add(JustVisitingHat, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 20), new Dimension(-1, 20), new Dimension(-1, 20), 0, false));
        JustVisitingHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        JustVisitingSpoon = new JPanel();
        JustVisitingSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        JustVisitingSpoon.setBackground(new Color(-5328998));
        JustVisitingPieces.add(JustVisitingSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 4, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 20), new Dimension(-1, 20), new Dimension(-1, 20), 0, false));
        JustVisitingSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        JustVisitingGoblet = new JPanel();
        JustVisitingGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        JustVisitingGoblet.setBackground(new Color(-5328998));
        JustVisitingPieces.add(JustVisitingGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 5, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(-1, 20), new Dimension(-1, 20), new Dimension(-1, 20), 0, false));
        JustVisitingGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SideTwo = new JPanel();
        SideTwo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        Board.add(SideTwo, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(70, 580), new Dimension(70, 580), new Dimension(70, 580), 0, false));
        SideTwoProperties = new JPanel();
        SideTwoProperties.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(9, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideTwo.add(SideTwoProperties, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(80, 580), new Dimension(80, 580), new Dimension(80, 580), 0, false));
        SkywalkerDrive = new JPanel();
        SkywalkerDrive.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        SkywalkerDrive.setAutoscrolls(true);
        SideTwoProperties.add(SkywalkerDrive, new com.intellij.uiDesigner.core.GridConstraints(8, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        SkywalkerDrive.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        SkyWalkerColor = new JPanel();
        SkyWalkerColor.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerColor.setBackground(new Color(-11533224));
        SkywalkerDrive.add(SkyWalkerColor, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(15, 60), new Dimension(15, 60), new Dimension(15, 60), 0, false));
        SkyWalkerOwner = new JPanel();
        SkyWalkerOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerOwner.setBackground(new Color(-5328998));
        SkyWalkerColor.add(SkyWalkerOwner, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SkyWalkerOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer12 = new com.intellij.uiDesigner.core.Spacer();
        SkyWalkerColor.add(spacer12, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        SkyWalkerContainer = new JPanel();
        SkyWalkerContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerContainer.setBackground(new Color(-5328998));
        SkywalkerDrive.add(SkyWalkerContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SkyWalkerName = new JPanel();
        SkyWalkerName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerName.setBackground(new Color(-5328998));
        SkyWalkerContainer.add(SkyWalkerName, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SkyWalkerHouseHotel = new JPanel();
        SkyWalkerHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerHouseHotel.setBackground(new Color(-5328998));
        SkyWalkerContainer.add(SkyWalkerHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SkyWalkerPieces = new JPanel();
        SkyWalkerPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerPieces.setBackground(new Color(-5328998));
        SkyWalkerContainer.add(SkyWalkerPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SkyWalkerCat = new JPanel();
        SkyWalkerCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerCat.setBackground(new Color(-5328998));
        SkyWalkerCat.setEnabled(false);
        SkyWalkerPieces.add(SkyWalkerCat, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        SkyWalkerCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SkyWalkerBoot = new JPanel();
        SkyWalkerBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerBoot.setBackground(new Color(-5328998));
        SkyWalkerBoot.setEnabled(false);
        SkyWalkerPieces.add(SkyWalkerBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        SkyWalkerBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SkyWalkerPhone = new JPanel();
        SkyWalkerPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerPhone.setBackground(new Color(-5328998));
        SkyWalkerPhone.setEnabled(false);
        SkyWalkerPieces.add(SkyWalkerPhone, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        SkyWalkerPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SkyWalkerHat = new JPanel();
        SkyWalkerHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerHat.setBackground(new Color(-5328998));
        SkyWalkerHat.setEnabled(false);
        SkyWalkerPieces.add(SkyWalkerHat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        SkyWalkerHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SkyWalkerSpoon = new JPanel();
        SkyWalkerSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerSpoon.setBackground(new Color(-5328998));
        SkyWalkerSpoon.setEnabled(false);
        SkyWalkerPieces.add(SkyWalkerSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        SkyWalkerSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SkyWalkerGoblet = new JPanel();
        SkyWalkerGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SkyWalkerGoblet.setBackground(new Color(-5328998));
        SkyWalkerGoblet.setEnabled(false);
        SkyWalkerPieces.add(SkyWalkerGoblet, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        SkyWalkerGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TeslaPowerCo = new JPanel();
        TeslaPowerCo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCo.setAutoscrolls(true);
        SideTwoProperties.add(TeslaPowerCo, new com.intellij.uiDesigner.core.GridConstraints(7, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        TeslaPowerCo.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        TeslaPowerCoColour = new JPanel();
        TeslaPowerCoColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCoColour.setBackground(new Color(-11533224));
        TeslaPowerCo.add(TeslaPowerCoColour, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TeslaPowerCoOwner = new JPanel();
        TeslaPowerCoOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCoOwner.setBackground(new Color(-5328998));
        TeslaPowerCoColour.add(TeslaPowerCoOwner, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TeslaPowerCoOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer13 = new com.intellij.uiDesigner.core.Spacer();
        TeslaPowerCoColour.add(spacer13, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        TeslaPowerCoContainer = new JPanel();
        TeslaPowerCoContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCoContainer.setBackground(new Color(-5328998));
        TeslaPowerCo.add(TeslaPowerCoContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TeslaPowerCoName = new JPanel();
        TeslaPowerCoName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCoName.setBackground(new Color(-5328998));
        TeslaPowerCoContainer.add(TeslaPowerCoName, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TeslaPOwerCoHouseHotel = new JPanel();
        TeslaPOwerCoHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPOwerCoHouseHotel.setBackground(new Color(-5328998));
        TeslaPowerCoContainer.add(TeslaPOwerCoHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TeslaPowerCoPieces = new JPanel();
        TeslaPowerCoPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCoPieces.setBackground(new Color(-5328998));
        TeslaPowerCoContainer.add(TeslaPowerCoPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TeslaPowerCoCat = new JPanel();
        TeslaPowerCoCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCoCat.setBackground(new Color(-5328998));
        TeslaPowerCoCat.setEnabled(false);
        TeslaPowerCoPieces.add(TeslaPowerCoCat, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        TeslaPowerCoCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TeslaPowerCoBoot = new JPanel();
        TeslaPowerCoBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCoBoot.setBackground(new Color(-5328998));
        TeslaPowerCoBoot.setEnabled(false);
        TeslaPowerCoPieces.add(TeslaPowerCoBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        TeslaPowerCoBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TeslaPowerCoPhone = new JPanel();
        TeslaPowerCoPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCoPhone.setBackground(new Color(-5328998));
        TeslaPowerCoPhone.setEnabled(false);
        TeslaPowerCoPieces.add(TeslaPowerCoPhone, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        TeslaPowerCoPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TeslaPowerCoHat = new JPanel();
        TeslaPowerCoHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCoHat.setBackground(new Color(-5328998));
        TeslaPowerCoHat.setEnabled(false);
        TeslaPowerCoPieces.add(TeslaPowerCoHat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        TeslaPowerCoHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TeslaPowerCoSpoon = new JPanel();
        TeslaPowerCoSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCoSpoon.setBackground(new Color(-5328998));
        TeslaPowerCoSpoon.setEnabled(false);
        TeslaPowerCoPieces.add(TeslaPowerCoSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        TeslaPowerCoSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TeslaPowerCoGoblet = new JPanel();
        TeslaPowerCoGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TeslaPowerCoGoblet.setBackground(new Color(-5328998));
        TeslaPowerCoGoblet.setEnabled(false);
        TeslaPowerCoPieces.add(TeslaPowerCoGoblet, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        TeslaPowerCoGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WookieHole = new JPanel();
        WookieHole.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        WookieHole.setAutoscrolls(true);
        SideTwoProperties.add(WookieHole, new com.intellij.uiDesigner.core.GridConstraints(6, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        WookieHole.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        WookieHoleColour = new JPanel();
        WookieHoleColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        WookieHoleColour.setBackground(new Color(-11533224));
        WookieHole.add(WookieHoleColour, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WookieHoleOwner = new JPanel();
        WookieHoleOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WookieHoleOwner.setBackground(new Color(-5328998));
        WookieHoleColour.add(WookieHoleOwner, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WookieHoleOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer14 = new com.intellij.uiDesigner.core.Spacer();
        WookieHoleColour.add(spacer14, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        WookieHoleContainer = new JPanel();
        WookieHoleContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        WookieHoleContainer.setBackground(new Color(-5328998));
        WookieHole.add(WookieHoleContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WookieHoleName = new JPanel();
        WookieHoleName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WookieHoleName.setBackground(new Color(-5328998));
        WookieHoleContainer.add(WookieHoleName, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WookieHoleHouseHotel = new JPanel();
        WookieHoleHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WookieHoleHouseHotel.setBackground(new Color(-5328998));
        WookieHoleContainer.add(WookieHoleHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WookieHolePieces = new JPanel();
        WookieHolePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        WookieHolePieces.setBackground(new Color(-5328998));
        WookieHoleContainer.add(WookieHolePieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WookieHoleCat = new JPanel();
        WookieHoleCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WookieHoleCat.setBackground(new Color(-5328998));
        WookieHoleCat.setEnabled(false);
        WookieHolePieces.add(WookieHoleCat, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WookieHoleCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WookieHoleBoot = new JPanel();
        WookieHoleBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WookieHoleBoot.setBackground(new Color(-5328998));
        WookieHoleBoot.setEnabled(false);
        WookieHolePieces.add(WookieHoleBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WookieHoleBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WookieHolePhone = new JPanel();
        WookieHolePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WookieHolePhone.setBackground(new Color(-5328998));
        WookieHolePhone.setEnabled(false);
        WookieHolePieces.add(WookieHolePhone, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WookieHolePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WookieHoleHat = new JPanel();
        WookieHoleHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WookieHoleHat.setBackground(new Color(-5328998));
        WookieHoleHat.setEnabled(false);
        WookieHolePieces.add(WookieHoleHat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WookieHoleHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WookieHoleSpoon = new JPanel();
        WookieHoleSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WookieHoleSpoon.setBackground(new Color(-5328998));
        WookieHoleSpoon.setEnabled(false);
        WookieHolePieces.add(WookieHoleSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WookieHoleSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WookieHoleGoblet = new JPanel();
        WookieHoleGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WookieHoleGoblet.setBackground(new Color(-5328998));
        WookieHoleGoblet.setEnabled(false);
        WookieHolePieces.add(WookieHoleGoblet, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WookieHoleGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        ReyLane = new JPanel();
        ReyLane.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        ReyLane.setAutoscrolls(true);
        SideTwoProperties.add(ReyLane, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        ReyLane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        ReyLaneColour = new JPanel();
        ReyLaneColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        ReyLaneColour.setBackground(new Color(-11533224));
        ReyLane.add(ReyLaneColour, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        ReyLaneOwner = new JPanel();
        ReyLaneOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        ReyLaneOwner.setBackground(new Color(-5328998));
        ReyLaneColour.add(ReyLaneOwner, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        ReyLaneOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer15 = new com.intellij.uiDesigner.core.Spacer();
        ReyLaneColour.add(spacer15, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        ReyLaneContainer = new JPanel();
        ReyLaneContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        ReyLaneContainer.setBackground(new Color(-5328998));
        ReyLane.add(ReyLaneContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        ReyLaneName = new JPanel();
        ReyLaneName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        ReyLaneName.setBackground(new Color(-5328998));
        ReyLaneContainer.add(ReyLaneName, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        ReyLaneHouseHotel = new JPanel();
        ReyLaneHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        ReyLaneHouseHotel.setBackground(new Color(-5328998));
        ReyLaneContainer.add(ReyLaneHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        ReyLanePieces = new JPanel();
        ReyLanePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        ReyLanePieces.setBackground(new Color(-5328998));
        ReyLaneContainer.add(ReyLanePieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        ReyLaneCat = new JPanel();
        ReyLaneCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        ReyLaneCat.setBackground(new Color(-5328998));
        ReyLaneCat.setEnabled(false);
        ReyLanePieces.add(ReyLaneCat, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        ReyLaneCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        ReyLaneBoot = new JPanel();
        ReyLaneBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        ReyLaneBoot.setBackground(new Color(-5328998));
        ReyLaneBoot.setEnabled(false);
        ReyLanePieces.add(ReyLaneBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        ReyLaneBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        ReyLanePhone = new JPanel();
        ReyLanePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        ReyLanePhone.setBackground(new Color(-5328998));
        ReyLanePhone.setEnabled(false);
        ReyLanePieces.add(ReyLanePhone, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        ReyLanePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        ReyLaneHat = new JPanel();
        ReyLaneHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        ReyLaneHat.setBackground(new Color(-5328998));
        ReyLaneHat.setEnabled(false);
        ReyLanePieces.add(ReyLaneHat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        ReyLaneHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        ReyLaneSpoon = new JPanel();
        ReyLaneSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        ReyLaneSpoon.setBackground(new Color(-5328998));
        ReyLaneSpoon.setEnabled(false);
        ReyLanePieces.add(ReyLaneSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        ReyLaneSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        ReyLaneGoblet = new JPanel();
        ReyLaneGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        ReyLaneGoblet.setBackground(new Color(-5328998));
        ReyLaneGoblet.setEnabled(false);
        ReyLanePieces.add(ReyLaneGoblet, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        ReyLaneGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HoveStation = new JPanel();
        HoveStation.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        HoveStation.setAutoscrolls(true);
        SideTwoProperties.add(HoveStation, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        HoveStation.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        HoveStationColor = new JPanel();
        HoveStationColor.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationColor.setBackground(new Color(-11533224));
        HoveStation.add(HoveStationColor, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HoveStationOwner = new JPanel();
        HoveStationOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationOwner.setBackground(new Color(-5328998));
        HoveStationColor.add(HoveStationOwner, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HoveStationOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer16 = new com.intellij.uiDesigner.core.Spacer();
        HoveStationColor.add(spacer16, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        HoveStationContainer = new JPanel();
        HoveStationContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationContainer.setBackground(new Color(-5328998));
        HoveStation.add(HoveStationContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HoveStationName = new JPanel();
        HoveStationName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationName.setBackground(new Color(-5328998));
        HoveStationContainer.add(HoveStationName, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HoveStationHouseHotel = new JPanel();
        HoveStationHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationHouseHotel.setBackground(new Color(-5328998));
        HoveStationContainer.add(HoveStationHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HoveStationPieces = new JPanel();
        HoveStationPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationPieces.setBackground(new Color(-5328998));
        HoveStationContainer.add(HoveStationPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HoveStationCat = new JPanel();
        HoveStationCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationCat.setBackground(new Color(-5328998));
        HoveStationCat.setEnabled(false);
        HoveStationPieces.add(HoveStationCat, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HoveStationCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HoveStationBoot = new JPanel();
        HoveStationBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationBoot.setBackground(new Color(-5328998));
        HoveStationBoot.setEnabled(false);
        HoveStationPieces.add(HoveStationBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HoveStationBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HoveStationPhone = new JPanel();
        HoveStationPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationPhone.setBackground(new Color(-5328998));
        HoveStationPhone.setEnabled(false);
        HoveStationPieces.add(HoveStationPhone, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HoveStationPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HoveStationHat = new JPanel();
        HoveStationHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationHat.setBackground(new Color(-5328998));
        HoveStationHat.setEnabled(false);
        HoveStationPieces.add(HoveStationHat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HoveStationHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HoveStationSpoon = new JPanel();
        HoveStationSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationSpoon.setBackground(new Color(-5328998));
        HoveStationSpoon.setEnabled(false);
        HoveStationPieces.add(HoveStationSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HoveStationSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HoveStationGoblet = new JPanel();
        HoveStationGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HoveStationGoblet.setBackground(new Color(-5328998));
        HoveStationGoblet.setEnabled(false);
        HoveStationPieces.add(HoveStationGoblet, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HoveStationGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CooperDrive = new JPanel();
        CooperDrive.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        CooperDrive.setAutoscrolls(true);
        SideTwoProperties.add(CooperDrive, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        CooperDrive.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        CooperDriveColour = new JPanel();
        CooperDriveColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        CooperDriveColour.setBackground(new Color(-11533224));
        CooperDrive.add(CooperDriveColour, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        CooperDriveOwner = new JPanel();
        CooperDriveOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CooperDriveOwner.setBackground(new Color(-5328998));
        CooperDriveColour.add(CooperDriveOwner, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        CooperDriveOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer17 = new com.intellij.uiDesigner.core.Spacer();
        CooperDriveColour.add(spacer17, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        CooperDriveContainer = new JPanel();
        CooperDriveContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        CooperDriveContainer.setBackground(new Color(-5328998));
        CooperDrive.add(CooperDriveContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        CooperDriveName = new JPanel();
        CooperDriveName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CooperDriveName.setBackground(new Color(-5328998));
        CooperDriveContainer.add(CooperDriveName, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        CooperDriveHouseHotel = new JPanel();
        CooperDriveHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CooperDriveHouseHotel.setBackground(new Color(-5328998));
        CooperDriveContainer.add(CooperDriveHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        CooperDrivePieces = new JPanel();
        CooperDrivePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        CooperDrivePieces.setBackground(new Color(-5328998));
        CooperDriveContainer.add(CooperDrivePieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        CooperDriveCat = new JPanel();
        CooperDriveCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CooperDriveCat.setBackground(new Color(-5328998));
        CooperDriveCat.setEnabled(false);
        CooperDrivePieces.add(CooperDriveCat, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CooperDriveCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CooperDriveBoot = new JPanel();
        CooperDriveBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CooperDriveBoot.setBackground(new Color(-5328998));
        CooperDriveBoot.setEnabled(false);
        CooperDrivePieces.add(CooperDriveBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CooperDriveBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CoopoerDrivePhone = new JPanel();
        CoopoerDrivePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CoopoerDrivePhone.setBackground(new Color(-5328998));
        CoopoerDrivePhone.setEnabled(false);
        CooperDrivePieces.add(CoopoerDrivePhone, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CoopoerDrivePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CooperDriveHat = new JPanel();
        CooperDriveHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CooperDriveHat.setBackground(new Color(-5328998));
        CooperDriveHat.setEnabled(false);
        CooperDrivePieces.add(CooperDriveHat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CooperDriveHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CooperDriveSpoon = new JPanel();
        CooperDriveSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CooperDriveSpoon.setBackground(new Color(-5328998));
        CooperDriveSpoon.setEnabled(false);
        CooperDrivePieces.add(CooperDriveSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CooperDriveSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CooperDriveGoblet = new JPanel();
        CooperDriveGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CooperDriveGoblet.setBackground(new Color(-5328998));
        CooperDriveGoblet.setEnabled(false);
        CooperDrivePieces.add(CooperDriveGoblet, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CooperDriveGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLTwo = new JPanel();
        PLTwo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        PLTwo.setAutoscrolls(true);
        SideTwoProperties.add(PLTwo, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        PLTwo.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        PLTwoColour = new JPanel();
        PLTwoColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoColour.setBackground(new Color(-11533224));
        PLTwo.add(PLTwoColour, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PLTwoOwner = new JPanel();
        PLTwoOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoOwner.setBackground(new Color(-5328998));
        PLTwoColour.add(PLTwoOwner, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PLTwoOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer18 = new com.intellij.uiDesigner.core.Spacer();
        PLTwoColour.add(spacer18, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        PLTwoContainer = new JPanel();
        PLTwoContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoContainer.setBackground(new Color(-5328998));
        PLTwo.add(PLTwoContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PLTwoName = new JPanel();
        PLTwoName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoName.setBackground(new Color(-5328998));
        PLTwoContainer.add(PLTwoName, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PLTwoHouseHotel = new JPanel();
        PLTwoHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoHouseHotel.setBackground(new Color(-5328998));
        PLTwoContainer.add(PLTwoHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PLTwoPieces = new JPanel();
        PLTwoPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoPieces.setBackground(new Color(-5328998));
        PLTwoContainer.add(PLTwoPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PLTwoCat = new JPanel();
        PLTwoCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoCat.setBackground(new Color(-5328998));
        PLTwoCat.setEnabled(false);
        PLTwoPieces.add(PLTwoCat, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLTwoCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLTwoBoot = new JPanel();
        PLTwoBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoBoot.setBackground(new Color(-5328998));
        PLTwoBoot.setEnabled(false);
        PLTwoPieces.add(PLTwoBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLTwoBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLTwoPhone = new JPanel();
        PLTwoPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoPhone.setBackground(new Color(-5328998));
        PLTwoPhone.setEnabled(false);
        PLTwoPieces.add(PLTwoPhone, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLTwoPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLTwoHat = new JPanel();
        PLTwoHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoHat.setBackground(new Color(-5328998));
        PLTwoHat.setEnabled(false);
        PLTwoPieces.add(PLTwoHat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLTwoHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLTwoSpoon = new JPanel();
        PLTwoSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoSpoon.setBackground(new Color(-5328998));
        PLTwoSpoon.setEnabled(false);
        PLTwoPieces.add(PLTwoSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLTwoSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLTwoGoblet = new JPanel();
        PLTwoGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLTwoGoblet.setBackground(new Color(-5328998));
        PLTwoGoblet.setEnabled(false);
        PLTwoPieces.add(PLTwoGoblet, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PLTwoGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WolowitzStreet = new JPanel();
        WolowitzStreet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreet.setAutoscrolls(true);
        SideTwoProperties.add(WolowitzStreet, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        WolowitzStreet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        WolowitzStreetColour = new JPanel();
        WolowitzStreetColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetColour.setBackground(new Color(-11533224));
        WolowitzStreet.add(WolowitzStreetColour, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WolowitzStreetOwner = new JPanel();
        WolowitzStreetOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetOwner.setBackground(new Color(-5328998));
        WolowitzStreetColour.add(WolowitzStreetOwner, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WolowitzStreetOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer19 = new com.intellij.uiDesigner.core.Spacer();
        WolowitzStreetColour.add(spacer19, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        WolowitzStreetContainer = new JPanel();
        WolowitzStreetContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetContainer.setBackground(new Color(-5328998));
        WolowitzStreet.add(WolowitzStreetContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WolowitzStreetName = new JPanel();
        WolowitzStreetName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetName.setBackground(new Color(-5328998));
        WolowitzStreetContainer.add(WolowitzStreetName, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WolowitzStreetHouseHotel = new JPanel();
        WolowitzStreetHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetHouseHotel.setBackground(new Color(-5328998));
        WolowitzStreetContainer.add(WolowitzStreetHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WolowitzStreetPieces = new JPanel();
        WolowitzStreetPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetPieces.setBackground(new Color(-5328998));
        WolowitzStreetContainer.add(WolowitzStreetPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        WolowitzStreetCat = new JPanel();
        WolowitzStreetCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetCat.setBackground(new Color(-5328998));
        WolowitzStreetCat.setEnabled(false);
        WolowitzStreetPieces.add(WolowitzStreetCat, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WolowitzStreetCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WolowitzStreetBoot = new JPanel();
        WolowitzStreetBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetBoot.setBackground(new Color(-5328998));
        WolowitzStreetBoot.setEnabled(false);
        WolowitzStreetPieces.add(WolowitzStreetBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WolowitzStreetBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WolowitzStreetPhone = new JPanel();
        WolowitzStreetPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetPhone.setBackground(new Color(-5328998));
        WolowitzStreetPhone.setEnabled(false);
        WolowitzStreetPieces.add(WolowitzStreetPhone, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WolowitzStreetPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WolowitzStreetHat = new JPanel();
        WolowitzStreetHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetHat.setBackground(new Color(-5328998));
        WolowitzStreetHat.setEnabled(false);
        WolowitzStreetPieces.add(WolowitzStreetHat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WolowitzStreetHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WolowitzStreetSpoon = new JPanel();
        WolowitzStreetSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetSpoon.setBackground(new Color(-5328998));
        WolowitzStreetSpoon.setEnabled(false);
        WolowitzStreetPieces.add(WolowitzStreetSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WolowitzStreetSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        WolowitzStreetGoblet = new JPanel();
        WolowitzStreetGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        WolowitzStreetGoblet.setBackground(new Color(-5328998));
        WolowitzStreetGoblet.setEnabled(false);
        WolowitzStreetPieces.add(WolowitzStreetGoblet, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        WolowitzStreetGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PennyLane = new JPanel();
        PennyLane.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        PennyLane.setAutoscrolls(true);
        SideTwoProperties.add(PennyLane, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        PennyLane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        PennyLaneColor = new JPanel();
        PennyLaneColor.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        PennyLaneColor.setBackground(new Color(-11533224));
        PennyLane.add(PennyLaneColor, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PennyLaneOwner = new JPanel();
        PennyLaneOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PennyLaneOwner.setBackground(new Color(-5328998));
        PennyLaneColor.add(PennyLaneOwner, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PennyLaneOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer20 = new com.intellij.uiDesigner.core.Spacer();
        PennyLaneColor.add(spacer20, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        PennyLaneContainer = new JPanel();
        PennyLaneContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        PennyLaneContainer.setBackground(new Color(-5328998));
        PennyLane.add(PennyLaneContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PennyLaneName = new JPanel();
        PennyLaneName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PennyLaneName.setBackground(new Color(-5328998));
        PennyLaneContainer.add(PennyLaneName, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PennyLaneHouseHotel = new JPanel();
        PennyLaneHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PennyLaneHouseHotel.setBackground(new Color(-5328998));
        PennyLaneContainer.add(PennyLaneHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PennyLanePieces = new JPanel();
        PennyLanePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        PennyLanePieces.setBackground(new Color(-5328998));
        PennyLaneContainer.add(PennyLanePieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PennyLaneCat = new JPanel();
        PennyLaneCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PennyLaneCat.setBackground(new Color(-5328998));
        PennyLaneCat.setEnabled(false);
        PennyLanePieces.add(PennyLaneCat, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PennyLaneCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PennyLaneBoot = new JPanel();
        PennyLaneBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PennyLaneBoot.setBackground(new Color(-5328998));
        PennyLaneBoot.setEnabled(false);
        PennyLanePieces.add(PennyLaneBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PennyLaneBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PennyLanePhone = new JPanel();
        PennyLanePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PennyLanePhone.setBackground(new Color(-5328998));
        PennyLanePhone.setEnabled(false);
        PennyLanePieces.add(PennyLanePhone, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PennyLanePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PennyLaneHat = new JPanel();
        PennyLaneHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PennyLaneHat.setBackground(new Color(-5328998));
        PennyLaneHat.setEnabled(false);
        PennyLanePieces.add(PennyLaneHat, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PennyLaneHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PennyLaneSpoon = new JPanel();
        PennyLaneSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PennyLaneSpoon.setBackground(new Color(-5328998));
        PennyLaneSpoon.setEnabled(false);
        PennyLanePieces.add(PennyLaneSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PennyLaneSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PennyLaneGoblet = new JPanel();
        PennyLaneGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PennyLaneGoblet.setBackground(new Color(-5328998));
        PennyLaneGoblet.setEnabled(false);
        PennyLanePieces.add(PennyLaneGoblet, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PennyLaneGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FreeParkingMargin = new JPanel();
        FreeParkingMargin.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        Board.add(FreeParkingMargin, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 60), new Dimension(89, 60), new Dimension(60, 60), 0, false));
        FreeParking = new JPanel();
        FreeParking.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FreeParking.setBackground(new Color(-5328998));
        FreeParkingMargin.add(FreeParking, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 60), new Dimension(60, 60), new Dimension(60, 60), 0, false));
        FreeParking.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        FreeParkingPieces = new JPanel();
        FreeParkingPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        FreeParkingPieces.setBackground(new Color(-5328998));
        FreeParking.add(FreeParkingPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        FreeParkintCat = new JPanel();
        FreeParkintCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FreeParkintCat.setBackground(new Color(-5328998));
        FreeParkintCat.setEnabled(false);
        FreeParkingPieces.add(FreeParkintCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FreeParkintCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FreeParkingBoot = new JPanel();
        FreeParkingBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FreeParkingBoot.setBackground(new Color(-5328998));
        FreeParkingBoot.setEnabled(false);
        FreeParkingPieces.add(FreeParkingBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FreeParkingBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FreeParkingPhone = new JPanel();
        FreeParkingPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FreeParkingPhone.setBackground(new Color(-5328998));
        FreeParkingPhone.setEnabled(false);
        FreeParkingPieces.add(FreeParkingPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FreeParkingPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FreeParkingHat = new JPanel();
        FreeParkingHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FreeParkingHat.setBackground(new Color(-5328998));
        FreeParkingHat.setEnabled(false);
        FreeParkingPieces.add(FreeParkingHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FreeParkingHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FreeParkingSpoon = new JPanel();
        FreeParkingSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FreeParkingSpoon.setBackground(new Color(-5328998));
        FreeParkingSpoon.setEnabled(false);
        FreeParkingPieces.add(FreeParkingSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FreeParkingSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FreeParkingGoblet = new JPanel();
        FreeParkingGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FreeParkingGoblet.setBackground(new Color(-5328998));
        FreeParkingGoblet.setEnabled(false);
        FreeParkingPieces.add(FreeParkingGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FreeParkingGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SideThree = new JPanel();
        SideThree.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        Board.add(SideThree, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(580, 70), new Dimension(580, 70), new Dimension(580, 70), 0, true));
        SideThreeProperties = new JPanel();
        SideThreeProperties.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 9, new Insets(0, 0, 0, 0), -1, -1));
        SideThree.add(SideThreeProperties, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(580, 70), new Dimension(580, 70), new Dimension(580, 70), 0, false));
        YueFeiSquare = new JPanel();
        YueFeiSquare.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideThreeProperties.add(YueFeiSquare, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        YueFeiSquare.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        YueFeiColor = new JPanel();
        YueFeiColor.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        YueFeiColor.setBackground(new Color(-10480369));
        YueFeiSquare.add(YueFeiColor, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 15), new Dimension(60, 15), new Dimension(60, 15), 0, false));
        YueFeiOwner = new JPanel();
        YueFeiOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        YueFeiOwner.setBackground(new Color(-5328998));
        YueFeiColor.add(YueFeiOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        YueFeiOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer21 = new com.intellij.uiDesigner.core.Spacer();
        YueFeiColor.add(spacer21, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        YueFeiInfo = new JPanel();
        YueFeiInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        YueFeiInfo.setBackground(new Color(-5328998));
        YueFeiSquare.add(YueFeiInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        YueFeiName = new JPanel();
        YueFeiName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        YueFeiName.setBackground(new Color(-5328998));
        YueFeiInfo.add(YueFeiName, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        YueFeiHouseHotel = new JPanel();
        YueFeiHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        YueFeiHouseHotel.setBackground(new Color(-5328998));
        YueFeiInfo.add(YueFeiHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        YueFeiPieces = new JPanel();
        YueFeiPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        YueFeiPieces.setBackground(new Color(-5328998));
        YueFeiInfo.add(YueFeiPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        YueFeiCat = new JPanel();
        YueFeiCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        YueFeiCat.setBackground(new Color(-5328998));
        YueFeiCat.setEnabled(false);
        YueFeiPieces.add(YueFeiCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        YueFeiCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        YueFeiBoot = new JPanel();
        YueFeiBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        YueFeiBoot.setBackground(new Color(-5328998));
        YueFeiBoot.setEnabled(false);
        YueFeiPieces.add(YueFeiBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        YueFeiBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        YeuFeiPhone = new JPanel();
        YeuFeiPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        YeuFeiPhone.setBackground(new Color(-5328998));
        YeuFeiPhone.setEnabled(false);
        YueFeiPieces.add(YeuFeiPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        YeuFeiPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        YueFeiHat = new JPanel();
        YueFeiHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        YueFeiHat.setBackground(new Color(-5328998));
        YueFeiHat.setEnabled(false);
        YueFeiPieces.add(YueFeiHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        YueFeiHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        YueFeiSpoon = new JPanel();
        YueFeiSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        YueFeiSpoon.setBackground(new Color(-5328998));
        YueFeiSpoon.setEnabled(false);
        YueFeiPieces.add(YueFeiSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        YueFeiSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        YueFeiGoblet = new JPanel();
        YueFeiGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        YueFeiGoblet.setBackground(new Color(-5328998));
        YueFeiGoblet.setEnabled(false);
        YueFeiPieces.add(YueFeiGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        YueFeiGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkTwo = new JPanel();
        OkTwo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideThreeProperties.add(OkTwo, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        OkTwo.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        OkTwoColour = new JPanel();
        OkTwoColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoColour.setBackground(new Color(-10480369));
        OkTwo.add(OkTwoColour, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 15), new Dimension(60, 15), new Dimension(60, 15), 0, false));
        OkTwoOwner = new JPanel();
        OkTwoOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoOwner.setBackground(new Color(-5328998));
        OkTwoColour.add(OkTwoOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OkTwoOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer22 = new com.intellij.uiDesigner.core.Spacer();
        OkTwoColour.add(spacer22, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        OkTwoInfo = new JPanel();
        OkTwoInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoInfo.setBackground(new Color(-5328998));
        OkTwo.add(OkTwoInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OkTwoName = new JPanel();
        OkTwoName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoName.setBackground(new Color(-5328998));
        OkTwoInfo.add(OkTwoName, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OkTwoHouseHotel = new JPanel();
        OkTwoHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoHouseHotel.setBackground(new Color(-5328998));
        OkTwoInfo.add(OkTwoHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OkTwoPieces = new JPanel();
        OkTwoPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoPieces.setBackground(new Color(-5328998));
        OkTwoInfo.add(OkTwoPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkTwoCat = new JPanel();
        OkTwoCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoCat.setBackground(new Color(-5328998));
        OkTwoCat.setEnabled(false);
        OkTwoPieces.add(OkTwoCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OkTwoCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkTwoBoot = new JPanel();
        OkTwoBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoBoot.setBackground(new Color(-5328998));
        OkTwoBoot.setEnabled(false);
        OkTwoPieces.add(OkTwoBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OkTwoBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkTwoPhone = new JPanel();
        OkTwoPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoPhone.setBackground(new Color(-5328998));
        OkTwoPhone.setEnabled(false);
        OkTwoPieces.add(OkTwoPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OkTwoPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkTwoHat = new JPanel();
        OkTwoHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoHat.setBackground(new Color(-5328998));
        OkTwoHat.setEnabled(false);
        OkTwoPieces.add(OkTwoHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OkTwoHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkTwoSpoon = new JPanel();
        OkTwoSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoSpoon.setBackground(new Color(-5328998));
        OkTwoSpoon.setEnabled(false);
        OkTwoPieces.add(OkTwoSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OkTwoSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkTwoGoblet = new JPanel();
        OkTwoGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkTwoGoblet.setBackground(new Color(-5328998));
        OkTwoGoblet.setEnabled(false);
        OkTwoPieces.add(OkTwoGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        OkTwoGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        MulanRouge = new JPanel();
        MulanRouge.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideThreeProperties.add(MulanRouge, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        MulanRouge.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        MulanRougeOwner = new JPanel();
        MulanRougeOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougeOwner.setBackground(new Color(-10480369));
        MulanRouge.add(MulanRougeOwner, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 15), new Dimension(60, 15), new Dimension(60, 15), 0, false));
        MulanRougeColour = new JPanel();
        MulanRougeColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougeColour.setBackground(new Color(-5328998));
        MulanRougeOwner.add(MulanRougeColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        MulanRougeColour.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer23 = new com.intellij.uiDesigner.core.Spacer();
        MulanRougeOwner.add(spacer23, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        MulanRougeContainer = new JPanel();
        MulanRougeContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougeContainer.setBackground(new Color(-5328998));
        MulanRouge.add(MulanRougeContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        MulanRougeName = new JPanel();
        MulanRougeName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougeName.setBackground(new Color(-5328998));
        MulanRougeContainer.add(MulanRougeName, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        MulanRougeHouseHotel = new JPanel();
        MulanRougeHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougeHouseHotel.setBackground(new Color(-5328998));
        MulanRougeContainer.add(MulanRougeHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        MulanRougePieces = new JPanel();
        MulanRougePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougePieces.setBackground(new Color(-5328998));
        MulanRougeContainer.add(MulanRougePieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        MulanRougeCat = new JPanel();
        MulanRougeCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougeCat.setBackground(new Color(-5328998));
        MulanRougeCat.setEnabled(false);
        MulanRougePieces.add(MulanRougeCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        MulanRougeCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        MulanRougeBoot = new JPanel();
        MulanRougeBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougeBoot.setBackground(new Color(-5328998));
        MulanRougeBoot.setEnabled(false);
        MulanRougePieces.add(MulanRougeBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        MulanRougeBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        MulanRougePhone = new JPanel();
        MulanRougePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougePhone.setBackground(new Color(-5328998));
        MulanRougePhone.setEnabled(false);
        MulanRougePieces.add(MulanRougePhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        MulanRougePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        MulanRougeHat = new JPanel();
        MulanRougeHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougeHat.setBackground(new Color(-5328998));
        MulanRougeHat.setEnabled(false);
        MulanRougePieces.add(MulanRougeHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        MulanRougeHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        MulanRougeSpoon = new JPanel();
        MulanRougeSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougeSpoon.setBackground(new Color(-5328998));
        MulanRougeSpoon.setEnabled(false);
        MulanRougePieces.add(MulanRougeSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        MulanRougeSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        MulanRougeGoblet = new JPanel();
        MulanRougeGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        MulanRougeGoblet.setBackground(new Color(-5328998));
        MulanRougeGoblet.setEnabled(false);
        MulanRougePieces.add(MulanRougeGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        MulanRougeGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HanXinGardens = new JPanel();
        HanXinGardens.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideThreeProperties.add(HanXinGardens, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        HanXinGardens.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        HanXinGardensColour = new JPanel();
        HanXinGardensColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensColour.setBackground(new Color(-10480369));
        HanXinGardens.add(HanXinGardensColour, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 15), new Dimension(60, 15), new Dimension(60, 15), 0, false));
        HanXinGardensOwner = new JPanel();
        HanXinGardensOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensOwner.setBackground(new Color(-5328998));
        HanXinGardensColour.add(HanXinGardensOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HanXinGardensOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer24 = new com.intellij.uiDesigner.core.Spacer();
        HanXinGardensColour.add(spacer24, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        HanXinGardensContainer = new JPanel();
        HanXinGardensContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensContainer.setBackground(new Color(-5328998));
        HanXinGardens.add(HanXinGardensContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        HanXinGardensName = new JPanel();
        HanXinGardensName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensName.setBackground(new Color(-5328998));
        HanXinGardensContainer.add(HanXinGardensName, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        HanXinGardensHouseHotel = new JPanel();
        HanXinGardensHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensHouseHotel.setBackground(new Color(-5328998));
        HanXinGardensContainer.add(HanXinGardensHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        HanXinGardensPieces = new JPanel();
        HanXinGardensPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensPieces.setBackground(new Color(-5328998));
        HanXinGardensContainer.add(HanXinGardensPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HanXinGardensCat = new JPanel();
        HanXinGardensCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensCat.setBackground(new Color(-5328998));
        HanXinGardensCat.setEnabled(false);
        HanXinGardensPieces.add(HanXinGardensCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HanXinGardensCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HanXinGardensBoot = new JPanel();
        HanXinGardensBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensBoot.setBackground(new Color(-5328998));
        HanXinGardensBoot.setEnabled(false);
        HanXinGardensPieces.add(HanXinGardensBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HanXinGardensBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HanXinGardensPhone = new JPanel();
        HanXinGardensPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensPhone.setBackground(new Color(-5328998));
        HanXinGardensPhone.setEnabled(false);
        HanXinGardensPieces.add(HanXinGardensPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HanXinGardensPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HanXinGardensHat = new JPanel();
        HanXinGardensHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensHat.setBackground(new Color(-5328998));
        HanXinGardensHat.setEnabled(false);
        HanXinGardensPieces.add(HanXinGardensHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HanXinGardensHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HanXinGardensSpoon = new JPanel();
        HanXinGardensSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensSpoon.setBackground(new Color(-5328998));
        HanXinGardensSpoon.setEnabled(false);
        HanXinGardensPieces.add(HanXinGardensSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HanXinGardensSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HanXinGardensGoblet = new JPanel();
        HanXinGardensGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HanXinGardensGoblet.setBackground(new Color(-5328998));
        HanXinGardensGoblet.setEnabled(false);
        HanXinGardensPieces.add(HanXinGardensGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        HanXinGardensGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FalmerStation = new JPanel();
        FalmerStation.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideThreeProperties.add(FalmerStation, new com.intellij.uiDesigner.core.GridConstraints(0, 4, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        FalmerStation.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        FalmerStationColour = new JPanel();
        FalmerStationColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStationColour.setBackground(new Color(-10480369));
        FalmerStation.add(FalmerStationColour, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 15), new Dimension(60, 15), new Dimension(60, 15), 0, false));
        FalmerStationOwner = new JPanel();
        FalmerStationOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStationOwner.setBackground(new Color(-5328998));
        FalmerStationColour.add(FalmerStationOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FalmerStationOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer25 = new com.intellij.uiDesigner.core.Spacer();
        FalmerStationColour.add(spacer25, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        FalmerStationContainer = new JPanel();
        FalmerStationContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStationContainer.setBackground(new Color(-5328998));
        FalmerStation.add(FalmerStationContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        FalmerStationName = new JPanel();
        FalmerStationName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStationName.setBackground(new Color(-5328998));
        FalmerStationContainer.add(FalmerStationName, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        FalmerStationHouseHotel = new JPanel();
        FalmerStationHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStationHouseHotel.setBackground(new Color(-5328998));
        FalmerStationContainer.add(FalmerStationHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        FalmerStationPieces = new JPanel();
        FalmerStationPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStationPieces.setBackground(new Color(-5328998));
        FalmerStationContainer.add(FalmerStationPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        FalmerStationCat = new JPanel();
        FalmerStationCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStationCat.setBackground(new Color(-5328998));
        FalmerStationCat.setEnabled(false);
        FalmerStationPieces.add(FalmerStationCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FalmerStationCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FalmerStationBoot = new JPanel();
        FalmerStationBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStationBoot.setBackground(new Color(-5328998));
        FalmerStationBoot.setEnabled(false);
        FalmerStationPieces.add(FalmerStationBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FalmerStationBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FalmerStationPhone = new JPanel();
        FalmerStationPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStationPhone.setBackground(new Color(-5328998));
        FalmerStationPhone.setEnabled(false);
        FalmerStationPieces.add(FalmerStationPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FalmerStationPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FalmerStaionHat = new JPanel();
        FalmerStaionHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStaionHat.setBackground(new Color(-5328998));
        FalmerStaionHat.setEnabled(false);
        FalmerStationPieces.add(FalmerStaionHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FalmerStaionHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FalmerStationSpoon = new JPanel();
        FalmerStationSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStationSpoon.setBackground(new Color(-5328998));
        FalmerStationSpoon.setEnabled(false);
        FalmerStationPieces.add(FalmerStationSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FalmerStationSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        FalmerStationGoblet = new JPanel();
        FalmerStationGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        FalmerStationGoblet.setBackground(new Color(-5328998));
        FalmerStationGoblet.setEnabled(false);
        FalmerStationPieces.add(FalmerStationGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        FalmerStationGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        KirkClose = new JPanel();
        KirkClose.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideThreeProperties.add(KirkClose, new com.intellij.uiDesigner.core.GridConstraints(0, 5, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        KirkClose.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        KirkCloseColour = new JPanel();
        KirkCloseColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        KirkCloseColour.setBackground(new Color(-10480369));
        KirkClose.add(KirkCloseColour, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 15), new Dimension(60, 15), new Dimension(60, 15), 0, false));
        KirkCloseOwner = new JPanel();
        KirkCloseOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        KirkCloseOwner.setBackground(new Color(-5328998));
        KirkCloseColour.add(KirkCloseOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        KirkCloseOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer26 = new com.intellij.uiDesigner.core.Spacer();
        KirkCloseColour.add(spacer26, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        KirkCloseContainer = new JPanel();
        KirkCloseContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        KirkCloseContainer.setBackground(new Color(-5328998));
        KirkClose.add(KirkCloseContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        KirkCloseName = new JPanel();
        KirkCloseName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        KirkCloseName.setBackground(new Color(-5328998));
        KirkCloseContainer.add(KirkCloseName, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        KirkCloseHouseHotel = new JPanel();
        KirkCloseHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        KirkCloseHouseHotel.setBackground(new Color(-5328998));
        KirkCloseContainer.add(KirkCloseHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        KirkClosePieces = new JPanel();
        KirkClosePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        KirkClosePieces.setBackground(new Color(-5328998));
        KirkCloseContainer.add(KirkClosePieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        KirkCloseCat = new JPanel();
        KirkCloseCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        KirkCloseCat.setBackground(new Color(-5328998));
        KirkCloseCat.setEnabled(false);
        KirkClosePieces.add(KirkCloseCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        KirkCloseCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        KirkCloseBoot = new JPanel();
        KirkCloseBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        KirkCloseBoot.setBackground(new Color(-5328998));
        KirkCloseBoot.setEnabled(false);
        KirkClosePieces.add(KirkCloseBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        KirkCloseBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        KirkClosePhone = new JPanel();
        KirkClosePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        KirkClosePhone.setBackground(new Color(-5328998));
        KirkClosePhone.setEnabled(false);
        KirkClosePieces.add(KirkClosePhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        KirkClosePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        KirkCloseHat = new JPanel();
        KirkCloseHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        KirkCloseHat.setBackground(new Color(-5328998));
        KirkCloseHat.setEnabled(false);
        KirkClosePieces.add(KirkCloseHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        KirkCloseHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        KirkCloseSpoon = new JPanel();
        KirkCloseSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        KirkCloseSpoon.setBackground(new Color(-5328998));
        KirkCloseSpoon.setEnabled(false);
        KirkClosePieces.add(KirkCloseSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        KirkCloseSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        KirkCloseGoblet = new JPanel();
        KirkCloseGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        KirkCloseGoblet.setBackground(new Color(-5328998));
        KirkCloseGoblet.setEnabled(false);
        KirkClosePieces.add(KirkCloseGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        KirkCloseGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PicardAvenue = new JPanel();
        PicardAvenue.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideThreeProperties.add(PicardAvenue, new com.intellij.uiDesigner.core.GridConstraints(0, 6, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        PicardAvenue.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        PicardAvenueColour = new JPanel();
        PicardAvenueColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenueColour.setBackground(new Color(-10480369));
        PicardAvenue.add(PicardAvenueColour, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 15), new Dimension(60, 15), new Dimension(60, 15), 0, false));
        PicardAvenueOwner = new JPanel();
        PicardAvenueOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenueOwner.setBackground(new Color(-5328998));
        PicardAvenueColour.add(PicardAvenueOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PicardAvenueOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer27 = new com.intellij.uiDesigner.core.Spacer();
        PicardAvenueColour.add(spacer27, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        PicardAvenueContainer = new JPanel();
        PicardAvenueContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenueContainer.setBackground(new Color(-5328998));
        PicardAvenue.add(PicardAvenueContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PicardAvenueName = new JPanel();
        PicardAvenueName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenueName.setBackground(new Color(-5328998));
        PicardAvenueContainer.add(PicardAvenueName, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PicardAvenueHouseHotel = new JPanel();
        PicardAvenueHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenueHouseHotel.setBackground(new Color(-5328998));
        PicardAvenueContainer.add(PicardAvenueHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PicardAvenuePieces = new JPanel();
        PicardAvenuePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenuePieces.setBackground(new Color(-5328998));
        PicardAvenueContainer.add(PicardAvenuePieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        PicardAvenueCat = new JPanel();
        PicardAvenueCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenueCat.setBackground(new Color(-5328998));
        PicardAvenueCat.setEnabled(false);
        PicardAvenuePieces.add(PicardAvenueCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PicardAvenueCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PicardAvenueBoot = new JPanel();
        PicardAvenueBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenueBoot.setBackground(new Color(-5328998));
        PicardAvenueBoot.setEnabled(false);
        PicardAvenuePieces.add(PicardAvenueBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PicardAvenueBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PicardAvenuePhone = new JPanel();
        PicardAvenuePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenuePhone.setBackground(new Color(-5328998));
        PicardAvenuePhone.setEnabled(false);
        PicardAvenuePieces.add(PicardAvenuePhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PicardAvenuePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PicardAvenueHat = new JPanel();
        PicardAvenueHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenueHat.setBackground(new Color(-5328998));
        PicardAvenueHat.setEnabled(false);
        PicardAvenuePieces.add(PicardAvenueHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PicardAvenueHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PicardAvenueSpoon = new JPanel();
        PicardAvenueSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenueSpoon.setBackground(new Color(-5328998));
        PicardAvenueSpoon.setEnabled(false);
        PicardAvenuePieces.add(PicardAvenueSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PicardAvenueSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PicardAvenueGoblet = new JPanel();
        PicardAvenueGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PicardAvenueGoblet.setBackground(new Color(-5328998));
        PicardAvenueGoblet.setEnabled(false);
        PicardAvenuePieces.add(PicardAvenueGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        PicardAvenueGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        EdisonWater = new JPanel();
        EdisonWater.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideThreeProperties.add(EdisonWater, new com.intellij.uiDesigner.core.GridConstraints(0, 7, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        EdisonWater.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        EdisonWaterColour = new JPanel();
        EdisonWaterColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterColour.setBackground(new Color(-10480369));
        EdisonWater.add(EdisonWaterColour, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 15), new Dimension(60, 15), new Dimension(60, 15), 0, false));
        EdisonWaterOwner = new JPanel();
        EdisonWaterOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterOwner.setBackground(new Color(-5328998));
        EdisonWaterColour.add(EdisonWaterOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        EdisonWaterOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer28 = new com.intellij.uiDesigner.core.Spacer();
        EdisonWaterColour.add(spacer28, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        EdisonWaterContainer = new JPanel();
        EdisonWaterContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterContainer.setBackground(new Color(-5328998));
        EdisonWater.add(EdisonWaterContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        EdisonWaterName = new JPanel();
        EdisonWaterName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterName.setBackground(new Color(-5328998));
        EdisonWaterContainer.add(EdisonWaterName, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        EdisonWaterHouseHotel = new JPanel();
        EdisonWaterHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterHouseHotel.setBackground(new Color(-5328998));
        EdisonWaterContainer.add(EdisonWaterHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        EdisonWaterPieces = new JPanel();
        EdisonWaterPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterPieces.setBackground(new Color(-5328998));
        EdisonWaterContainer.add(EdisonWaterPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        EdisonWaterCat = new JPanel();
        EdisonWaterCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterCat.setBackground(new Color(-5328998));
        EdisonWaterCat.setEnabled(false);
        EdisonWaterPieces.add(EdisonWaterCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        EdisonWaterCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        EdisonWaterBoot = new JPanel();
        EdisonWaterBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterBoot.setBackground(new Color(-5328998));
        EdisonWaterBoot.setEnabled(false);
        EdisonWaterPieces.add(EdisonWaterBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        EdisonWaterBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        EdisonWaterPhone = new JPanel();
        EdisonWaterPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterPhone.setBackground(new Color(-5328998));
        EdisonWaterPhone.setEnabled(false);
        EdisonWaterPieces.add(EdisonWaterPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        EdisonWaterPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        EdisonWaterHat = new JPanel();
        EdisonWaterHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterHat.setBackground(new Color(-5328998));
        EdisonWaterHat.setEnabled(false);
        EdisonWaterPieces.add(EdisonWaterHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        EdisonWaterHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        EdisonWaterSpoon = new JPanel();
        EdisonWaterSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterSpoon.setBackground(new Color(-5328998));
        EdisonWaterSpoon.setEnabled(false);
        EdisonWaterPieces.add(EdisonWaterSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        EdisonWaterSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        EdisonWaterGoblet = new JPanel();
        EdisonWaterGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        EdisonWaterGoblet.setBackground(new Color(-5328998));
        EdisonWaterGoblet.setEnabled(false);
        EdisonWaterPieces.add(EdisonWaterGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        EdisonWaterGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CrusherCreek = new JPanel();
        CrusherCreek.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideThreeProperties.add(CrusherCreek, new com.intellij.uiDesigner.core.GridConstraints(0, 8, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 70), new Dimension(60, 70), new Dimension(60, 70), 0, false));
        CrusherCreek.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        CrusherCreekColour = new JPanel();
        CrusherCreekColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekColour.setBackground(new Color(-10480369));
        CrusherCreek.add(CrusherCreekColour, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 15), new Dimension(60, 15), new Dimension(60, 15), 0, false));
        CrusherCreekOwner = new JPanel();
        CrusherCreekOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekOwner.setBackground(new Color(-5328998));
        CrusherCreekColour.add(CrusherCreekOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrusherCreekOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer29 = new com.intellij.uiDesigner.core.Spacer();
        CrusherCreekColour.add(spacer29, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        CrusherCreekContainer = new JPanel();
        CrusherCreekContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekContainer.setBackground(new Color(-5328998));
        CrusherCreek.add(CrusherCreekContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        CrusherCreekName = new JPanel();
        CrusherCreekName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekName.setBackground(new Color(-5328998));
        CrusherCreekContainer.add(CrusherCreekName, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        CrusherCreekHouseHotel = new JPanel();
        CrusherCreekHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekHouseHotel.setBackground(new Color(-5328998));
        CrusherCreekContainer.add(CrusherCreekHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        CrusherCreekPieces = new JPanel();
        CrusherCreekPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekPieces.setBackground(new Color(-5328998));
        CrusherCreekContainer.add(CrusherCreekPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        CrusherCreekCat = new JPanel();
        CrusherCreekCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekCat.setBackground(new Color(-5328998));
        CrusherCreekCat.setEnabled(false);
        CrusherCreekPieces.add(CrusherCreekCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrusherCreekCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CrusherCreekBoot = new JPanel();
        CrusherCreekBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekBoot.setBackground(new Color(-5328998));
        CrusherCreekBoot.setEnabled(false);
        CrusherCreekPieces.add(CrusherCreekBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrusherCreekBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CrusherCreekPhone = new JPanel();
        CrusherCreekPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekPhone.setBackground(new Color(-5328998));
        CrusherCreekPhone.setEnabled(false);
        CrusherCreekPieces.add(CrusherCreekPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrusherCreekPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CrusherCreekHat = new JPanel();
        CrusherCreekHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekHat.setBackground(new Color(-5328998));
        CrusherCreekHat.setEnabled(false);
        CrusherCreekPieces.add(CrusherCreekHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrusherCreekHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CrusherCreekSpoom = new JPanel();
        CrusherCreekSpoom.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekSpoom.setBackground(new Color(-5328998));
        CrusherCreekSpoom.setEnabled(false);
        CrusherCreekPieces.add(CrusherCreekSpoom, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrusherCreekSpoom.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        CrusherCreekGoblet = new JPanel();
        CrusherCreekGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        CrusherCreekGoblet.setBackground(new Color(-5328998));
        CrusherCreekGoblet.setEnabled(false);
        CrusherCreekPieces.add(CrusherCreekGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        CrusherCreekGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GoToJailMargin = new JPanel();
        GoToJailMargin.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        Board.add(GoToJailMargin, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(60, 60), new Dimension(60, 60), new Dimension(60, 60), 0, false));
        GoToJail = new JPanel();
        GoToJail.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoToJail.setBackground(new Color(-5328998));
        GoToJailMargin.add(GoToJail, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        GoToJail.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        GoToJailPieces = new JPanel();
        GoToJailPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        GoToJailPieces.setBackground(new Color(-5328998));
        GoToJail.add(GoToJailPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        GoToJailCat = new JPanel();
        GoToJailCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoToJailCat.setBackground(new Color(-5328998));
        GoToJailCat.setEnabled(false);
        GoToJailPieces.add(GoToJailCat, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoToJailCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GoToJailBoot = new JPanel();
        GoToJailBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoToJailBoot.setBackground(new Color(-5328998));
        GoToJailBoot.setEnabled(false);
        GoToJailPieces.add(GoToJailBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoToJailBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GoToJailPhone = new JPanel();
        GoToJailPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoToJailPhone.setBackground(new Color(-5328998));
        GoToJailPhone.setEnabled(false);
        GoToJailPieces.add(GoToJailPhone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoToJailPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GoToJailHat = new JPanel();
        GoToJailHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoToJailHat.setBackground(new Color(-5328998));
        GoToJailHat.setEnabled(false);
        GoToJailPieces.add(GoToJailHat, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoToJailHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GoToJailSpoon = new JPanel();
        GoToJailSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoToJailSpoon.setBackground(new Color(-5328998));
        GoToJailSpoon.setEnabled(false);
        GoToJailPieces.add(GoToJailSpoon, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoToJailSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GoToJailGoblet = new JPanel();
        GoToJailGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GoToJailGoblet.setBackground(new Color(-5328998));
        GoToJailGoblet.setEnabled(false);
        GoToJailPieces.add(GoToJailGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        GoToJailGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SideFour = new JPanel();
        SideFour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        Board.add(SideFour, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(80, 580), new Dimension(80, 580), new Dimension(80, 580), 0, true));
        SideFourProperties = new JPanel();
        SideFourProperties.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(9, 1, new Insets(0, 0, 0, 0), -1, -1));
        SideFour.add(SideFourProperties, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, 1, new Dimension(80, 580), new Dimension(80, 580), new Dimension(80, 580), 0, false));
        SiratMews = new JPanel();
        SiratMews.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        SideFourProperties.add(SiratMews, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        SiratMews.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        SiratMewsColour = new JPanel();
        SiratMewsColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsColour.setBackground(new Color(-15777522));
        SiratMews.add(SiratMewsColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(15, 60), new Dimension(15, 60), new Dimension(15, 60), 0, false));
        SiratMewsOwner = new JPanel();
        SiratMewsOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsOwner.setBackground(new Color(-5328998));
        SiratMewsOwner.setFocusCycleRoot(true);
        SiratMewsColour.add(SiratMewsOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SiratMewsOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer30 = new com.intellij.uiDesigner.core.Spacer();
        SiratMewsColour.add(spacer30, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        SiratMewsInfo = new JPanel();
        SiratMewsInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsInfo.setBackground(new Color(-5328998));
        SiratMews.add(SiratMewsInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        SiratMewsName = new JPanel();
        SiratMewsName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsName.setBackground(new Color(-5328998));
        SiratMewsInfo.add(SiratMewsName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        SiratMewsPieces = new JPanel();
        SiratMewsPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsPieces.setBackground(new Color(-5328998));
        SiratMewsInfo.add(SiratMewsPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        SiratMewsCat = new JPanel();
        SiratMewsCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsCat.setBackground(new Color(-5328998));
        SiratMewsPieces.add(SiratMewsCat, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        SiratMewsCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SiratMewsBoot = new JPanel();
        SiratMewsBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsBoot.setBackground(new Color(-5328998));
        SiratMewsPieces.add(SiratMewsBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        SiratMewsBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SiratMewsPhone = new JPanel();
        SiratMewsPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsPhone.setBackground(new Color(-5328998));
        SiratMewsPieces.add(SiratMewsPhone, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        SiratMewsPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SiratMewsHat = new JPanel();
        SiratMewsHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsHat.setBackground(new Color(-5328998));
        SiratMewsPieces.add(SiratMewsHat, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        SiratMewsHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SiratMewsSpoon = new JPanel();
        SiratMewsSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsSpoon.setBackground(new Color(-5328998));
        SiratMewsPieces.add(SiratMewsSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        SiratMewsSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SiratMewsGoblet = new JPanel();
        SiratMewsGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsGoblet.setBackground(new Color(-5328998));
        SiratMewsPieces.add(SiratMewsGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        SiratMewsGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SiratMewsHouseHotel = new JPanel();
        SiratMewsHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SiratMewsHouseHotel.setBackground(new Color(-5328998));
        SiratMewsInfo.add(SiratMewsHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GhengisCrescent = new JPanel();
        GhengisCrescent.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        SideFourProperties.add(GhengisCrescent, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        GhengisCrescent.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        GhengisCrescentColour = new JPanel();
        GhengisCrescentColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentColour.setBackground(new Color(-15777522));
        GhengisCrescent.add(GhengisCrescentColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(15, 60), new Dimension(15, 60), new Dimension(15, 60), 0, false));
        GhengisCrescentOwner = new JPanel();
        GhengisCrescentOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentOwner.setBackground(new Color(-5328998));
        GhengisCrescentOwner.setFocusCycleRoot(true);
        GhengisCrescentColour.add(GhengisCrescentOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GhengisCrescentOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer31 = new com.intellij.uiDesigner.core.Spacer();
        GhengisCrescentColour.add(spacer31, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        GhengisCrescentInfo = new JPanel();
        GhengisCrescentInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentInfo.setBackground(new Color(-5328998));
        GhengisCrescent.add(GhengisCrescentInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GhengisCrescentName = new JPanel();
        GhengisCrescentName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentName.setBackground(new Color(-5328998));
        GhengisCrescentInfo.add(GhengisCrescentName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GhengisCrescentPieces = new JPanel();
        GhengisCrescentPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentPieces.setBackground(new Color(-5328998));
        GhengisCrescentInfo.add(GhengisCrescentPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GhengisCrescentCat = new JPanel();
        GhengisCrescentCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentCat.setBackground(new Color(-5328998));
        GhengisCrescentPieces.add(GhengisCrescentCat, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GhengisCrescentCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GhengisCrescentBoot = new JPanel();
        GhengisCrescentBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentBoot.setBackground(new Color(-5328998));
        GhengisCrescentPieces.add(GhengisCrescentBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GhengisCrescentBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GhengisCrescentPhone = new JPanel();
        GhengisCrescentPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentPhone.setBackground(new Color(-5328998));
        GhengisCrescentPieces.add(GhengisCrescentPhone, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GhengisCrescentPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GhengisCrescentHat = new JPanel();
        GhengisCrescentHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentHat.setBackground(new Color(-5328998));
        GhengisCrescentPieces.add(GhengisCrescentHat, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GhengisCrescentHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GhengisCrescentSpoon = new JPanel();
        GhengisCrescentSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentSpoon.setBackground(new Color(-5328998));
        GhengisCrescentPieces.add(GhengisCrescentSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GhengisCrescentSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GhengisCrescentGoblet = new JPanel();
        GhengisCrescentGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentGoblet.setBackground(new Color(-5328998));
        GhengisCrescentPieces.add(GhengisCrescentGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        GhengisCrescentGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        GhengisCrescentHouseHotel = new JPanel();
        GhengisCrescentHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        GhengisCrescentHouseHotel.setBackground(new Color(-5328998));
        GhengisCrescentInfo.add(GhengisCrescentHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLThree = new JPanel();
        PLThree.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        SideFourProperties.add(PLThree, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        PLThree.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        PLThreeColour = new JPanel();
        PLThreeColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLThreeColour.setBackground(new Color(-15777522));
        PLThree.add(PLThreeColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(15, 60), new Dimension(15, 60), new Dimension(15, 60), 0, false));
        PLThreeOwner = new JPanel();
        PLThreeOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLThreeOwner.setBackground(new Color(-5328998));
        PLThreeOwner.setFocusCycleRoot(true);
        PLThreeColour.add(PLThreeOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLThreeOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer32 = new com.intellij.uiDesigner.core.Spacer();
        PLThreeColour.add(spacer32, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        PLThreeInfo = new JPanel();
        PLThreeInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        PLThreeInfo.setBackground(new Color(-5328998));
        PLThree.add(PLThreeInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLThreeName = new JPanel();
        PLThreeName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLThreeName.setBackground(new Color(-5328998));
        PLThreeInfo.add(PLThreeName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLThreePieces = new JPanel();
        PLThreePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        PLThreePieces.setBackground(new Color(-5328998));
        PLThreeInfo.add(PLThreePieces, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLThreeCat = new JPanel();
        PLThreeCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLThreeCat.setBackground(new Color(-5328998));
        PLThreePieces.add(PLThreeCat, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLThreeCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLThreeBoot = new JPanel();
        PLThreeBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLThreeBoot.setBackground(new Color(-5328998));
        PLThreePieces.add(PLThreeBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLThreeBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLThreePhone = new JPanel();
        PLThreePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLThreePhone.setBackground(new Color(-5328998));
        PLThreePieces.add(PLThreePhone, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLThreePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLThreeHat = new JPanel();
        PLThreeHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLThreeHat.setBackground(new Color(-5328998));
        PLThreePieces.add(PLThreeHat, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLThreeHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLThreeSpoon = new JPanel();
        PLThreeSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLThreeSpoon.setBackground(new Color(-5328998));
        PLThreePieces.add(PLThreeSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLThreeSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLThreeGoblet = new JPanel();
        PLThreeGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLThreeGoblet.setBackground(new Color(-5328998));
        PLThreePieces.add(PLThreeGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        PLThreeGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLThreeHouseHotel = new JPanel();
        PLThreeHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        PLThreeHouseHotel.setBackground(new Color(-5328998));
        PLThreeInfo.add(PLThreeHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisClose = new JPanel();
        IbisClose.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        SideFourProperties.add(IbisClose, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        IbisClose.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        IbisCloseColour = new JPanel();
        IbisCloseColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        IbisCloseColour.setBackground(new Color(-15777522));
        IbisClose.add(IbisCloseColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisCloseOwner = new JPanel();
        IbisCloseOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IbisCloseOwner.setBackground(new Color(-5328998));
        IbisCloseOwner.setFocusCycleRoot(true);
        IbisCloseColour.add(IbisCloseOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisCloseOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer33 = new com.intellij.uiDesigner.core.Spacer();
        IbisCloseColour.add(spacer33, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        IbisCloseInfo = new JPanel();
        IbisCloseInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        IbisCloseInfo.setBackground(new Color(-5328998));
        IbisClose.add(IbisCloseInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisCloseName = new JPanel();
        IbisCloseName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IbisCloseName.setBackground(new Color(-5328998));
        IbisCloseInfo.add(IbisCloseName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisClosePieces = new JPanel();
        IbisClosePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        IbisClosePieces.setBackground(new Color(-5328998));
        IbisCloseInfo.add(IbisClosePieces, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisCloseCat = new JPanel();
        IbisCloseCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IbisCloseCat.setBackground(new Color(-5328998));
        IbisClosePieces.add(IbisCloseCat, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisCloseCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        IbisCloseBoot = new JPanel();
        IbisCloseBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IbisCloseBoot.setBackground(new Color(-5328998));
        IbisClosePieces.add(IbisCloseBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisCloseBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        IbisClosePhone = new JPanel();
        IbisClosePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IbisClosePhone.setBackground(new Color(-5328998));
        IbisClosePieces.add(IbisClosePhone, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisClosePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        IbisCloseHat = new JPanel();
        IbisCloseHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IbisCloseHat.setBackground(new Color(-5328998));
        IbisClosePieces.add(IbisCloseHat, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisCloseHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        IbisCloseSpoon = new JPanel();
        IbisCloseSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IbisCloseSpoon.setBackground(new Color(-5328998));
        IbisClosePieces.add(IbisCloseSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisCloseSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        IbisCloseGoblet = new JPanel();
        IbisCloseGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IbisCloseGoblet.setBackground(new Color(-5328998));
        IbisClosePieces.add(IbisCloseGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        IbisCloseGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        IbisCloseHouseHotel = new JPanel();
        IbisCloseHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        IbisCloseHouseHotel.setBackground(new Color(-5328998));
        IbisCloseInfo.add(IbisCloseHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStation = new JPanel();
        LewesStation.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        SideFourProperties.add(LewesStation, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        LewesStation.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        LewesStationColour = new JPanel();
        LewesStationColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationColour.setBackground(new Color(-15777522));
        LewesStation.add(LewesStationColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStationOwner = new JPanel();
        LewesStationOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationOwner.setBackground(new Color(-5328998));
        LewesStationOwner.setFocusCycleRoot(true);
        LewesStationColour.add(LewesStationOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStationOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer34 = new com.intellij.uiDesigner.core.Spacer();
        LewesStationColour.add(spacer34, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        LewesStationInfo = new JPanel();
        LewesStationInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationInfo.setBackground(new Color(-5328998));
        LewesStation.add(LewesStationInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStationName = new JPanel();
        LewesStationName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationName.setBackground(new Color(-5328998));
        LewesStationInfo.add(LewesStationName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStationPieces = new JPanel();
        LewesStationPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationPieces.setBackground(new Color(-5328998));
        LewesStationInfo.add(LewesStationPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStationCat = new JPanel();
        LewesStationCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationCat.setBackground(new Color(-5328998));
        LewesStationPieces.add(LewesStationCat, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStationCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        LewesStationBoot = new JPanel();
        LewesStationBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationBoot.setBackground(new Color(-5328998));
        LewesStationPieces.add(LewesStationBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStationBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        LewesStationPhone = new JPanel();
        LewesStationPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationPhone.setBackground(new Color(-5328998));
        LewesStationPieces.add(LewesStationPhone, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStationPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        LewesStationHat = new JPanel();
        LewesStationHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationHat.setBackground(new Color(-5328998));
        LewesStationPieces.add(LewesStationHat, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStationHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        LewesStationSpoon = new JPanel();
        LewesStationSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationSpoon.setBackground(new Color(-5328998));
        LewesStationPieces.add(LewesStationSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStationSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        LewesStationGoblet = new JPanel();
        LewesStationGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationGoblet.setBackground(new Color(-5328998));
        LewesStationPieces.add(LewesStationGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        LewesStationGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        LewesStationHouseHotel = new JPanel();
        LewesStationHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        LewesStationHouseHotel.setBackground(new Color(-5328998));
        LewesStationInfo.add(LewesStationHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OkThree = new JPanel();
        OkThree.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        SideFourProperties.add(OkThree, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        OkThree.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        OkThreeColour = new JPanel();
        OkThreeColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkThreeColour.setBackground(new Color(-15777522));
        OkThree.add(OkThreeColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkThreeOwner = new JPanel();
        OkThreeOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkThreeOwner.setBackground(new Color(-5328998));
        OkThreeOwner.setFocusCycleRoot(true);
        OkThreeColour.add(OkThreeOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkThreeOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer35 = new com.intellij.uiDesigner.core.Spacer();
        OkThreeColour.add(spacer35, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        OkThreeInfo = new JPanel();
        OkThreeInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        OkThreeInfo.setBackground(new Color(-5328998));
        OkThree.add(OkThreeInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkThreeName = new JPanel();
        OkThreeName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkThreeName.setBackground(new Color(-5328998));
        OkThreeInfo.add(OkThreeName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkThreePieces = new JPanel();
        OkThreePieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        OkThreePieces.setBackground(new Color(-5328998));
        OkThreeInfo.add(OkThreePieces, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkThreeCat = new JPanel();
        OkThreeCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkThreeCat.setBackground(new Color(-5328998));
        OkThreePieces.add(OkThreeCat, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkThreeCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkThreeBoot = new JPanel();
        OkThreeBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkThreeBoot.setBackground(new Color(-5328998));
        OkThreePieces.add(OkThreeBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkThreeBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkThreePhone = new JPanel();
        OkThreePhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkThreePhone.setBackground(new Color(-5328998));
        OkThreePieces.add(OkThreePhone, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkThreePhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkThreeHat = new JPanel();
        OkThreeHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkThreeHat.setBackground(new Color(-5328998));
        OkThreePieces.add(OkThreeHat, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkThreeHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkThreeSpoon = new JPanel();
        OkThreeSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkThreeSpoon.setBackground(new Color(-5328998));
        OkThreePieces.add(OkThreeSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkThreeSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkThreeGoblet = new JPanel();
        OkThreeGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkThreeGoblet.setBackground(new Color(-5328998));
        OkThreePieces.add(OkThreeGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        OkThreeGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        OkThreeHotelHouse = new JPanel();
        OkThreeHotelHouse.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        OkThreeHotelHouse.setBackground(new Color(-5328998));
        OkThreeInfo.add(OkThreeHotelHouse, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWay = new JPanel();
        HawkingWay.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        SideFourProperties.add(HawkingWay, new com.intellij.uiDesigner.core.GridConstraints(6, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        HawkingWay.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        HawkingWayColour = new JPanel();
        HawkingWayColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWayColour.setBackground(new Color(-16049599));
        HawkingWay.add(HawkingWayColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWayOwner = new JPanel();
        HawkingWayOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWayOwner.setBackground(new Color(-5328998));
        HawkingWayOwner.setFocusCycleRoot(true);
        HawkingWayColour.add(HawkingWayOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWayOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer36 = new com.intellij.uiDesigner.core.Spacer();
        HawkingWayColour.add(spacer36, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        HawkingWayInfo = new JPanel();
        HawkingWayInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWayInfo.setBackground(new Color(-5328998));
        HawkingWay.add(HawkingWayInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWayName = new JPanel();
        HawkingWayName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWayName.setBackground(new Color(-5328998));
        HawkingWayInfo.add(HawkingWayName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWayPieces = new JPanel();
        HawkingWayPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWayPieces.setBackground(new Color(-5328998));
        HawkingWayInfo.add(HawkingWayPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWayCat = new JPanel();
        HawkingWayCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWayCat.setBackground(new Color(-5328998));
        HawkingWayPieces.add(HawkingWayCat, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWayCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HawkingWayBoot = new JPanel();
        HawkingWayBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWayBoot.setBackground(new Color(-5328998));
        HawkingWayPieces.add(HawkingWayBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWayBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HawkingWayPhone = new JPanel();
        HawkingWayPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWayPhone.setBackground(new Color(-5328998));
        HawkingWayPieces.add(HawkingWayPhone, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWayPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HawkingWayHat = new JPanel();
        HawkingWayHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWayHat.setBackground(new Color(-5328998));
        HawkingWayPieces.add(HawkingWayHat, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWayHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HawkingWaySpoon = new JPanel();
        HawkingWaySpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWaySpoon.setBackground(new Color(-5328998));
        HawkingWayPieces.add(HawkingWaySpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWaySpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HawkingWayGoblet = new JPanel();
        HawkingWayGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWayGoblet.setBackground(new Color(-5328998));
        HawkingWayPieces.add(HawkingWayGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        HawkingWayGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        HawkingWayHouseHotel = new JPanel();
        HawkingWayHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        HawkingWayHouseHotel.setBackground(new Color(-5328998));
        HawkingWayInfo.add(HawkingWayHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTax = new JPanel();
        SuperTax.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        SideFourProperties.add(SuperTax, new com.intellij.uiDesigner.core.GridConstraints(7, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        SuperTax.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        SuperTaxColour = new JPanel();
        SuperTaxColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxColour.setBackground(new Color(-15777522));
        SuperTax.add(SuperTaxColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTaxOwner = new JPanel();
        SuperTaxOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxOwner.setBackground(new Color(-5328998));
        SuperTaxOwner.setFocusCycleRoot(true);
        SuperTaxColour.add(SuperTaxOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTaxOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer37 = new com.intellij.uiDesigner.core.Spacer();
        SuperTaxColour.add(spacer37, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        SuperTaxContainer = new JPanel();
        SuperTaxContainer.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxContainer.setBackground(new Color(-5328998));
        SuperTax.add(SuperTaxContainer, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTaxName = new JPanel();
        SuperTaxName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxName.setBackground(new Color(-5328998));
        SuperTaxContainer.add(SuperTaxName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTaxPieces = new JPanel();
        SuperTaxPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxPieces.setBackground(new Color(-5328998));
        SuperTaxContainer.add(SuperTaxPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTaxCat = new JPanel();
        SuperTaxCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxCat.setBackground(new Color(-5328998));
        SuperTaxPieces.add(SuperTaxCat, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTaxCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SuperTaxBoot = new JPanel();
        SuperTaxBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxBoot.setBackground(new Color(-5328998));
        SuperTaxPieces.add(SuperTaxBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTaxBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SuperTaxPhone = new JPanel();
        SuperTaxPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxPhone.setBackground(new Color(-5328998));
        SuperTaxPieces.add(SuperTaxPhone, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTaxPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SuperTaxHat = new JPanel();
        SuperTaxHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxHat.setBackground(new Color(-5328998));
        SuperTaxPieces.add(SuperTaxHat, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTaxHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SuperTaxSpoon = new JPanel();
        SuperTaxSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxSpoon.setBackground(new Color(-5328998));
        SuperTaxPieces.add(SuperTaxSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTaxSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SuperTaxGoblet = new JPanel();
        SuperTaxGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxGoblet.setBackground(new Color(-5328998));
        SuperTaxPieces.add(SuperTaxGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        SuperTaxGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        SuperTaxHouseHotel = new JPanel();
        SuperTaxHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        SuperTaxHouseHotel.setBackground(new Color(-5328998));
        SuperTaxContainer.add(SuperTaxHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeights = new JPanel();
        TuringHeights.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        SideFourProperties.add(TuringHeights, new com.intellij.uiDesigner.core.GridConstraints(8, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, 1, 1, new Dimension(70, 60), new Dimension(70, 60), new Dimension(70, 60), 0, false));
        TuringHeights.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        TuringHeightsColour = new JPanel();
        TuringHeightsColour.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsColour.setBackground(new Color(-16049599));
        TuringHeights.add(TuringHeightsColour, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeightsOwner = new JPanel();
        TuringHeightsOwner.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsOwner.setBackground(new Color(-5328998));
        TuringHeightsOwner.setFocusCycleRoot(true);
        TuringHeightsColour.add(TuringHeightsOwner, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeightsOwner.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer38 = new com.intellij.uiDesigner.core.Spacer();
        TuringHeightsColour.add(spacer38, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        TuringHeightsInfo = new JPanel();
        TuringHeightsInfo.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsInfo.setBackground(new Color(-5328998));
        TuringHeights.add(TuringHeightsInfo, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeightsName = new JPanel();
        TuringHeightsName.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsName.setBackground(new Color(-5328998));
        TuringHeightsInfo.add(TuringHeightsName, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeightsPieces = new JPanel();
        TuringHeightsPieces.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsPieces.setBackground(new Color(-5328998));
        TuringHeightsInfo.add(TuringHeightsPieces, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeightsCat = new JPanel();
        TuringHeightsCat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsCat.setBackground(new Color(-5328998));
        TuringHeightsPieces.add(TuringHeightsCat, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeightsCat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TuringHeightsBoot = new JPanel();
        TuringHeightsBoot.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsBoot.setBackground(new Color(-5328998));
        TuringHeightsPieces.add(TuringHeightsBoot, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeightsBoot.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TuringHeightsPhone = new JPanel();
        TuringHeightsPhone.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsPhone.setBackground(new Color(-5328998));
        TuringHeightsPieces.add(TuringHeightsPhone, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeightsPhone.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TuringHeightsHat = new JPanel();
        TuringHeightsHat.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsHat.setBackground(new Color(-5328998));
        TuringHeightsPieces.add(TuringHeightsHat, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeightsHat.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TuringHeightsSpoon = new JPanel();
        TuringHeightsSpoon.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsSpoon.setBackground(new Color(-5328998));
        TuringHeightsPieces.add(TuringHeightsSpoon, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeightsSpoon.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TuringHeightsGoblet = new JPanel();
        TuringHeightsGoblet.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsGoblet.setBackground(new Color(-5328998));
        TuringHeightsPieces.add(TuringHeightsGoblet, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        TuringHeightsGoblet.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        TuringHeightsHouseHotel = new JPanel();
        TuringHeightsHouseHotel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TuringHeightsHouseHotel.setBackground(new Color(-5328998));
        TuringHeightsInfo.add(TuringHeightsHouseHotel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false));
        CentreMargin = new JPanel();
        CentreMargin.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1, true, true));
        Board.add(CentreMargin, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(500, 500), new Dimension(500, 500), new Dimension(500, 500), 0, false));
        Centre = new JPanel();
        Centre.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        Centre.setAlignmentX(0.0f);
        Centre.setAlignmentY(0.0f);
        Centre.setBackground(new Color(-5328998));
        CentreMargin.add(Centre, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(500, 500), new Dimension(500, 500), new Dimension(500, 500), 0, true));
        Centre.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        final com.intellij.uiDesigner.core.Spacer spacer39 = new com.intellij.uiDesigner.core.Spacer();
        Centre.add(spacer39, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        OkDeck = new JPanel();
        OkDeck.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(10, 10, 10, 10), 5, 5));
        OkDeck.setAlignmentX(1.0f);
        OkDeck.setAlignmentY(1.0f);
        OkDeck.setBackground(new Color(-5328998));
        Centre.add(OkDeck, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(100, 95), new Dimension(100, 95), new Dimension(100, 95), 3, false));
        OkDeck.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        PLDeck = new JPanel();
        PLDeck.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(10, 10, 10, 10), 5, 5));
        PLDeck.setAlignmentX(1.0f);
        PLDeck.setAlignmentY(1.0f);
        PLDeck.setBackground(new Color(-5328998));
        Centre.add(PLDeck, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, 1, 1, new Dimension(100, 95), new Dimension(100, 95), new Dimension(100, 95), 3, false));
        PLDeck.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return Window;
    }
}